{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Poirot documentation Welcome to Poirot documentation site. In upcoming pages you will see: A problem statement and project description Software design document Testing and security document Software deployment and maintanance document To navigate in the site, use next or prev buttons.","title":"Home"},{"location":"#poirot-documentation","text":"Welcome to Poirot documentation site. In upcoming pages you will see: A problem statement and project description Software design document Testing and security document Software deployment and maintanance document To navigate in the site, use next or prev buttons.","title":"Poirot documentation"},{"location":"HELP/","text":"Getting Started Reference Documentation For further reference, please consider the following sections: Official Gradle documentation Spring Boot Gradle Plugin Reference Guide Create an OCI image Spring Data MongoDB Useful commands Install MongoDB locally cd scripts docker-compose up -d Show available java versions Minimum java version is Java 17. /usr/libexec/java_home -V Docker Be sure that Docker Desktop is up and running together with docker Check if docker is up and running docker ps Swagger run me Guides The following guides illustrate how to use some features concretely: Accessing Data with MongoDB Additional Links These additional references should also help you: Gradle Build Scans \u2013 insights for your project's build LI structure we get during the scrapping { \"@context\":\"http://schema.org\", \"@graph\":[ { \"@type\":\"Person\", \"address\":{ \"@type\":\"PostalAddress\", \"addressLocality\":\"Denver, Colorado, United States\", \"addressCountry\":\"US\" }, \"alumniOf\":[ { \"@type\":\"EducationalOrganization\", \"name\":\"Texas A&M University\", \"url\":\"https://www.linkedin.com/school/texas-a&m-university/\", \"member\":{ \"@type\":\"OrganizationRole\", \"startDate\":1993, \"endDate\":1998 } } ], \"awards\":[ \"Chief Data Officer Magazine - Leading Data Consultants\", \"Epicor Innovation Award\" ], \"image\":{ \"@type\":\"ImageObject\", \"contentUrl\":\"https://media.licdn.com/dms/image/v2/D5603AQGNj73gyg8EyQ/profile-displayphoto-shrink_200_200/profile-displayphoto-shrink_200_200/0/1693333951210?e=2147483647&v=beta&t=g02i2msMkmv6m0YwhWaGmwyCtKUGx8cDnlo9GDlsKkI\" }, \"jobTitlename\":\"Jon Snow\", \"sameAs\":\"https://www.linkedin.com/in/jonwsnow\", \"url\":\"https://www.linkedin.com/in/jonwsnow\", \"memberOf\":[ ], \"worksFor\":[ { \"@type\":\"Organization\", \"name\":\"Icertis\", \"url\":\"https://www.linkedin.com/company/icertis\", \"location\":\"Denver, Colorado, United States\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"\u2022 *** ******** ******* ******** *** ********** *** ********* ********* ** *** ********.\\u003C**\\u003E\u2022 ********* ******** ** ******** ******** ***** *** ****** ******** ************* *** ******** ********* *******.\\u003C**\\u003E\u2022 ******** *********** ******* ****** *** ******** ************ ******* ********* ******** ******* ***********.\" } }, { \"@type\":\"Organization\", \"name\":\"*******\", \"location\":\"Denver, Colorado, United States\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"\u2022 *********** *** ************* ** *** ******** ******* ************ ** *******, ******* ******** ******** *** ***** *********** *** ****** *********.\\u003C**\\u003E\u2022 ************ **** *****-********** ***** ** ****** *********** ******** ********** *** ******* ******.\\u003C**\\u003E\u2022 *********** ********** ** ******* *******' ***** ****** ********** *** ******* ***********.\" } }, { \"@type\":\"Organization\", \"name\":\"****\", \"location\":\"Denver, Colorado, United States\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"******* ******** ******* *** ******* ***** ** *** ********.\\u003C**\\u003E******* ******** ******** **** * ***** ** **** ** ***** *********, ******* ********** *********' ****** ** **********.\" } }, { \"@type\":\"Organization\", \"name\":\"***** *\", \"location\":\"Denver, CO\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"\u2022\\t******* *** ************ ******** *** ******** ******* ***** *** *** ****-**** *********\\u003C**\\u003E\u2022\\t********* ******* **** ********** ********** ********** ****\\u003C**\\u003E\u2022\\t******* ** ******* ********** ******* ******** *** ********* ************ ** *************** ** ******* ******** ************ \\u003C**\\u003E\u2022\\t******* *** ***** * *** ******** ***** *******\\u003C**\\u003E\\u003C**\\u003E*************:\\u003C**\\u003E\u2022\\t*** ******** ***** **-***** *********** **** -** ** +**.\\u003C**\\u003E\u2022\\t**% ******* *********** ** *****-****** **** *********** *&*.\\u003C**\\u003E\u2022\\t**% ****** *********** ** *****-****** **** *********** *&*.\\u003C**\\u003E\u2022\\t**.*% ****** ********* ******* ********* **** (******** *******).\" } }, { \"@type\":\"Organization\", \"name\":\"***** *\", \"location\":\"Denver, CO\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"\u2022\\t******* ******** *** ******* ****** ***** *** ******* **** **********, *********: **************, *******, ******* **********, ******** *******, *** *********.\\u003C**\\u003E\u2022\\t******* ******** ********* *** ******** *** ********* ** ***** ******** ******** ********.\\u003C**\\u003E\u2022\\t***** ********* *** ******** ******* ********** ****** *** ***** * ******** *** *********.\\u003C**\\u003E\\u003C**\\u003E*************:\\u003C**\\u003E\u2022\\t***** * **** ** *****, ******** *********** ********.\\u003C**\\u003E\u2022\\t******* ***** ** *% ****** ***** **** (******** *******).\" } }, { \"@type\":\"Organization\", \"name\":\"****** ********\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"\u2022\\t******* ******* *** * ********* ********** ********** ** ***** *,***+ ****** ****** ********* ** *** ****** ****** ******* *** **** ***.\\u003C**\\u003E\u2022\\t*********** ****** *** *********** ** ********* ***** ** ****** ******** ****** ** **%, ********** ********* ** ***** ***** ************.\\u003C**\\u003E\u2022\\t************ ** ******** ******** & ********** ****, **** ** ********* ***** ** ********* *** ******* ********** ****** ******** *****. ********** ********** *** ******* ** ***** ********** ***********, ********* ** * *** ******** ***** ******** ** ** ******.\" } }, { \"@type\":\"Organization\", \"name\":\"****** ********\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"*********** *** *** ********, **************, *** ****************** ** * ******** ******* ******** ********. ******** ****** ********* ** ************ ******** (**) ******** ** ******** ****** ** *** ********\u2019* **** ********* ******** ******** ************. \\u003C**\\u003E******** **************** *******:\\u003C**\\u003E\u2022\\t***** ** *****, ************* ***+ ********* *** $*** ** *******\\u003C**\\u003E\u2022\\t******* *** *********** ******* **** ******** ********** **** ** ******* ** * **** ****.\\u003C**\\u003E\u2022\\t******* *** ******* ********** ******, ******** ********** ******, *** ******** ********** ******** *****\\u003C**\\u003E\u2022\\t******* ** ** ******** *********** ******** *** **** ** ******* ** ** ************** *** ****** ***********, ********* *******/******** ************ **********\\u003C**\\u003E\u2022\\t***/******** *** ******* ******* ********** \\u003C**\\u003E\\u003C**\\u003E*************:\\u003C**\\u003E\u2022\\t******** ******* ******* ****** ** *% *** ******** ******* ****** ** *%.\\u003C**\\u003E\u2022\\t******* ********** ******: ********* *** ******** ************** ************* ** ******* ******* *********, ******* ********* ******** ************.\" } }, { \"@type\":\"Organization\", \"name\":\"****** ********, ******** ******** *********\", \"location\":\"Denver, CO\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"*************:\\u003C**\\u003E\u2022\\t******** ******* ******* ** **% **** **** ****, **** *** ******** **** **% ** *** ****** ****, *** **% ****** ** *** ***** ****.\\u003C**\\u003E\u2022\\t************ ******* &**;$*** ** ******** ******** *** ********** &**;$*** ** ****** *******.\\u003C**\\u003E\u2022\\t************ ******** **** ***** ******** ************ *** *********** ********* *********.\" } }, { \"@type\":\"Organization\", \"name\":\"****** ******** ****\", \"member\":{ \"@type\":\"OrganizationRole\" } }, { \"@type\":\"Organization\", \"name\":\"******** *********, ******** ******* **\", \"member\":{ \"@type\":\"OrganizationRole\" } }, { \"@type\":\"Organization\", \"name\":\"******** *********\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"******* **** ** ******* ******** ************ *** ******** ******* ** ********* ******** *** ********'* ********* ************ *****\\u003C**\\u003E*************:\\u003C**\\u003E\u2022\\t****** *** ** *** *********** ** ******** *****, *****, ******** ************, ****** *******, *** ***** ******* ******** *** ** *********** ******* ** ******* *******. ******** ******* ****** ***** *******.\" } }, { \"@type\":\"Organization\", \"name\":\"******** *********\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"*********** **** *** **** *** ** ********* **** * ********** ***** ****** ** ******** *****, ******* ****** ******* *** ********* ***.\" } }, { \"@type\":\"Organization\", \"name\":\"****** ***********\", \"location\":\"Denver, CO\", \"member\":{ \"@type\":\"OrganizationRole\" } } ], \"knowsLanguage\":[ ], \"disambiguatingDescription\":\"\", \"interactionStatistic\":{ \"@type\":\"InteractionCounter\", \"interactionType\":\"https://schema.org/FollowAction\", \"name\":\"Follows\", \"userInteractionCount\":3530 }, \"description\":\"Highly motivated and driven to personally succeed through coaching and assisting\u2026\" }, { \"@type\":\"WebPage\", \"url\":\"https://www.linkedin.com/in/jonwsnow\", \"reviewedBy\":{ \"@type\":\"Person\", \"name\":\"Jon Snow\" } } ] } FB raw data we get during the scrapping { \"page_name\":\"Paul Kirby: Member for Port Darwin\", \"page_category\":\"Politiker/in\", \"email\":\"electorate.portdarwin@nt.gov.au\", \"page_website\":[ \"http://www.territorylabor.com.au\", \"https://parliament.nt.gov.au/members/by-name/paul-kirby\" ], \"social_media_links\":[ \"https://www.instagram.com/kirbyportdarwin\", \"https://linkedin.com/in\" ], \"phone_number\":\"None\", \"location\":\"http://www.territorylabor.com.au/\", \"page_rate\":\"None\", \"page_review_number\":\"None\", \"page_likes\":\"None\", \"page_followers\":\"3.861 Follower\", \"following\":\"1,065 followed\" } FB our data, saved in the mongoDB Facebook List of Persons [ { \"id\": \"970ba0e4-105a-416d-a998-df846e0b9858\", \"firstName\": \"Anthony\", \"lastName\": \"Zurcher\", \"email\": \"haveyoursay@bbc.co.uk\", \"phone\": null, \"profession\": \"Media/news company\", \"personalWebPageURL\": \"http://www.bbc.co.uk/news\", \"followers\": 48, \"following\": 0, \"location\": \"BBC Broadcasting House, London, United Kingdom, W1A 1AA\" }, { \"id\": \"845d587c-8c5a-409b-9db1-ed1e9c51916b\", \"firstName\": \"Anthony\", \"lastName\": \"Zurcher\", \"email\": \"newsroomznbc@gmail.com\", \"phone\": null, \"profession\": \"Interest\", \"personalWebPageURL\": \"https://znbc.co.zm\", \"followers\": 982000, \"following\": 0, \"location\": \"ZNBC, P.O Box 50015, Mass Media Complex, Alick Nkata Road, Lusaka., 10101\" }, { \"id\": \"48e7a87d-171b-47bf-853e-94ca5443483d\", \"firstName\": \"Anthony\", \"lastName\": \"Zurcher\", \"email\": \"info@creators.com\", \"phone\": \"+1 310-337-7003\", \"profession\": \"Arts & entertainment\", \"personalWebPageURL\": \"http://www.Creators.com\", \"followers\": 2000, \"following\": 0, \"location\": \"+1 310-337-7003\" } ] curl example curl -X POST http://localhost:5001 -d \"{\\\"link\\\":\\\"https://www.facebook.com/mr.pallab.ghosh/\\\"}\" -H \"Content-Type: application/json\" ``` #### How to run python, FB page scrapper Create venv - virtual environment ```bash python3 -m venv fb_scapper_venv Activate created venv source fb_scapper_venv/bin/activate Install all fb_scrapper dependencies pip install -r requirements.txt And finally, run a script python3 -m fb_page_scrapper","title":"Help"},{"location":"HELP/#getting-started","text":"","title":"Getting Started"},{"location":"HELP/#reference-documentation","text":"For further reference, please consider the following sections: Official Gradle documentation Spring Boot Gradle Plugin Reference Guide Create an OCI image Spring Data MongoDB","title":"Reference Documentation"},{"location":"HELP/#useful-commands","text":"","title":"Useful commands"},{"location":"HELP/#install-mongodb-locally","text":"cd scripts docker-compose up -d","title":"Install MongoDB locally"},{"location":"HELP/#show-available-java-versions","text":"Minimum java version is Java 17. /usr/libexec/java_home -V","title":"Show available java versions"},{"location":"HELP/#docker","text":"Be sure that Docker Desktop is up and running together with docker Check if docker is up and running docker ps","title":"Docker"},{"location":"HELP/#swagger","text":"run me","title":"Swagger"},{"location":"HELP/#guides","text":"The following guides illustrate how to use some features concretely: Accessing Data with MongoDB","title":"Guides"},{"location":"HELP/#additional-links","text":"These additional references should also help you: Gradle Build Scans \u2013 insights for your project's build","title":"Additional Links"},{"location":"HELP/#li-structure-we-get-during-the-scrapping","text":"{ \"@context\":\"http://schema.org\", \"@graph\":[ { \"@type\":\"Person\", \"address\":{ \"@type\":\"PostalAddress\", \"addressLocality\":\"Denver, Colorado, United States\", \"addressCountry\":\"US\" }, \"alumniOf\":[ { \"@type\":\"EducationalOrganization\", \"name\":\"Texas A&M University\", \"url\":\"https://www.linkedin.com/school/texas-a&m-university/\", \"member\":{ \"@type\":\"OrganizationRole\", \"startDate\":1993, \"endDate\":1998 } } ], \"awards\":[ \"Chief Data Officer Magazine - Leading Data Consultants\", \"Epicor Innovation Award\" ], \"image\":{ \"@type\":\"ImageObject\", \"contentUrl\":\"https://media.licdn.com/dms/image/v2/D5603AQGNj73gyg8EyQ/profile-displayphoto-shrink_200_200/profile-displayphoto-shrink_200_200/0/1693333951210?e=2147483647&v=beta&t=g02i2msMkmv6m0YwhWaGmwyCtKUGx8cDnlo9GDlsKkI\" }, \"jobTitlename\":\"Jon Snow\", \"sameAs\":\"https://www.linkedin.com/in/jonwsnow\", \"url\":\"https://www.linkedin.com/in/jonwsnow\", \"memberOf\":[ ], \"worksFor\":[ { \"@type\":\"Organization\", \"name\":\"Icertis\", \"url\":\"https://www.linkedin.com/company/icertis\", \"location\":\"Denver, Colorado, United States\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"\u2022 *** ******** ******* ******** *** ********** *** ********* ********* ** *** ********.\\u003C**\\u003E\u2022 ********* ******** ** ******** ******** ***** *** ****** ******** ************* *** ******** ********* *******.\\u003C**\\u003E\u2022 ******** *********** ******* ****** *** ******** ************ ******* ********* ******** ******* ***********.\" } }, { \"@type\":\"Organization\", \"name\":\"*******\", \"location\":\"Denver, Colorado, United States\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"\u2022 *********** *** ************* ** *** ******** ******* ************ ** *******, ******* ******** ******** *** ***** *********** *** ****** *********.\\u003C**\\u003E\u2022 ************ **** *****-********** ***** ** ****** *********** ******** ********** *** ******* ******.\\u003C**\\u003E\u2022 *********** ********** ** ******* *******' ***** ****** ********** *** ******* ***********.\" } }, { \"@type\":\"Organization\", \"name\":\"****\", \"location\":\"Denver, Colorado, United States\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"******* ******** ******* *** ******* ***** ** *** ********.\\u003C**\\u003E******* ******** ******** **** * ***** ** **** ** ***** *********, ******* ********** *********' ****** ** **********.\" } }, { \"@type\":\"Organization\", \"name\":\"***** *\", \"location\":\"Denver, CO\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"\u2022\\t******* *** ************ ******** *** ******** ******* ***** *** *** ****-**** *********\\u003C**\\u003E\u2022\\t********* ******* **** ********** ********** ********** ****\\u003C**\\u003E\u2022\\t******* ** ******* ********** ******* ******** *** ********* ************ ** *************** ** ******* ******** ************ \\u003C**\\u003E\u2022\\t******* *** ***** * *** ******** ***** *******\\u003C**\\u003E\\u003C**\\u003E*************:\\u003C**\\u003E\u2022\\t*** ******** ***** **-***** *********** **** -** ** +**.\\u003C**\\u003E\u2022\\t**% ******* *********** ** *****-****** **** *********** *&*.\\u003C**\\u003E\u2022\\t**% ****** *********** ** *****-****** **** *********** *&*.\\u003C**\\u003E\u2022\\t**.*% ****** ********* ******* ********* **** (******** *******).\" } }, { \"@type\":\"Organization\", \"name\":\"***** *\", \"location\":\"Denver, CO\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"\u2022\\t******* ******** *** ******* ****** ***** *** ******* **** **********, *********: **************, *******, ******* **********, ******** *******, *** *********.\\u003C**\\u003E\u2022\\t******* ******** ********* *** ******** *** ********* ** ***** ******** ******** ********.\\u003C**\\u003E\u2022\\t***** ********* *** ******** ******* ********** ****** *** ***** * ******** *** *********.\\u003C**\\u003E\\u003C**\\u003E*************:\\u003C**\\u003E\u2022\\t***** * **** ** *****, ******** *********** ********.\\u003C**\\u003E\u2022\\t******* ***** ** *% ****** ***** **** (******** *******).\" } }, { \"@type\":\"Organization\", \"name\":\"****** ********\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"\u2022\\t******* ******* *** * ********* ********** ********** ** ***** *,***+ ****** ****** ********* ** *** ****** ****** ******* *** **** ***.\\u003C**\\u003E\u2022\\t*********** ****** *** *********** ** ********* ***** ** ****** ******** ****** ** **%, ********** ********* ** ***** ***** ************.\\u003C**\\u003E\u2022\\t************ ** ******** ******** & ********** ****, **** ** ********* ***** ** ********* *** ******* ********** ****** ******** *****. ********** ********** *** ******* ** ***** ********** ***********, ********* ** * *** ******** ***** ******** ** ** ******.\" } }, { \"@type\":\"Organization\", \"name\":\"****** ********\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"*********** *** *** ********, **************, *** ****************** ** * ******** ******* ******** ********. ******** ****** ********* ** ************ ******** (**) ******** ** ******** ****** ** *** ********\u2019* **** ********* ******** ******** ************. \\u003C**\\u003E******** **************** *******:\\u003C**\\u003E\u2022\\t***** ** *****, ************* ***+ ********* *** $*** ** *******\\u003C**\\u003E\u2022\\t******* *** *********** ******* **** ******** ********** **** ** ******* ** * **** ****.\\u003C**\\u003E\u2022\\t******* *** ******* ********** ******, ******** ********** ******, *** ******** ********** ******** *****\\u003C**\\u003E\u2022\\t******* ** ** ******** *********** ******** *** **** ** ******* ** ** ************** *** ****** ***********, ********* *******/******** ************ **********\\u003C**\\u003E\u2022\\t***/******** *** ******* ******* ********** \\u003C**\\u003E\\u003C**\\u003E*************:\\u003C**\\u003E\u2022\\t******** ******* ******* ****** ** *% *** ******** ******* ****** ** *%.\\u003C**\\u003E\u2022\\t******* ********** ******: ********* *** ******** ************** ************* ** ******* ******* *********, ******* ********* ******** ************.\" } }, { \"@type\":\"Organization\", \"name\":\"****** ********, ******** ******** *********\", \"location\":\"Denver, CO\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"*************:\\u003C**\\u003E\u2022\\t******** ******* ******* ** **% **** **** ****, **** *** ******** **** **% ** *** ****** ****, *** **% ****** ** *** ***** ****.\\u003C**\\u003E\u2022\\t************ ******* &**;$*** ** ******** ******** *** ********** &**;$*** ** ****** *******.\\u003C**\\u003E\u2022\\t************ ******** **** ***** ******** ************ *** *********** ********* *********.\" } }, { \"@type\":\"Organization\", \"name\":\"****** ******** ****\", \"member\":{ \"@type\":\"OrganizationRole\" } }, { \"@type\":\"Organization\", \"name\":\"******** *********, ******** ******* **\", \"member\":{ \"@type\":\"OrganizationRole\" } }, { \"@type\":\"Organization\", \"name\":\"******** *********\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"******* **** ** ******* ******** ************ *** ******** ******* ** ********* ******** *** ********'* ********* ************ *****\\u003C**\\u003E*************:\\u003C**\\u003E\u2022\\t****** *** ** *** *********** ** ******** *****, *****, ******** ************, ****** *******, *** ***** ******* ******** *** ** *********** ******* ** ******* *******. ******** ******* ****** ***** *******.\" } }, { \"@type\":\"Organization\", \"name\":\"******** *********\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"*********** **** *** **** *** ** ********* **** * ********** ***** ****** ** ******** *****, ******* ****** ******* *** ********* ***.\" } }, { \"@type\":\"Organization\", \"name\":\"****** ***********\", \"location\":\"Denver, CO\", \"member\":{ \"@type\":\"OrganizationRole\" } } ], \"knowsLanguage\":[ ], \"disambiguatingDescription\":\"\", \"interactionStatistic\":{ \"@type\":\"InteractionCounter\", \"interactionType\":\"https://schema.org/FollowAction\", \"name\":\"Follows\", \"userInteractionCount\":3530 }, \"description\":\"Highly motivated and driven to personally succeed through coaching and assisting\u2026\" }, { \"@type\":\"WebPage\", \"url\":\"https://www.linkedin.com/in/jonwsnow\", \"reviewedBy\":{ \"@type\":\"Person\", \"name\":\"Jon Snow\" } } ] }","title":"LI structure we get during the scrapping"},{"location":"HELP/#fb-raw-data-we-get-during-the-scrapping","text":"{ \"page_name\":\"Paul Kirby: Member for Port Darwin\", \"page_category\":\"Politiker/in\", \"email\":\"electorate.portdarwin@nt.gov.au\", \"page_website\":[ \"http://www.territorylabor.com.au\", \"https://parliament.nt.gov.au/members/by-name/paul-kirby\" ], \"social_media_links\":[ \"https://www.instagram.com/kirbyportdarwin\", \"https://linkedin.com/in\" ], \"phone_number\":\"None\", \"location\":\"http://www.territorylabor.com.au/\", \"page_rate\":\"None\", \"page_review_number\":\"None\", \"page_likes\":\"None\", \"page_followers\":\"3.861 Follower\", \"following\":\"1,065 followed\" }","title":"FB raw data we get during the scrapping"},{"location":"HELP/#fb-our-data-saved-in-the-mongodb","text":"Facebook List of Persons [ { \"id\": \"970ba0e4-105a-416d-a998-df846e0b9858\", \"firstName\": \"Anthony\", \"lastName\": \"Zurcher\", \"email\": \"haveyoursay@bbc.co.uk\", \"phone\": null, \"profession\": \"Media/news company\", \"personalWebPageURL\": \"http://www.bbc.co.uk/news\", \"followers\": 48, \"following\": 0, \"location\": \"BBC Broadcasting House, London, United Kingdom, W1A 1AA\" }, { \"id\": \"845d587c-8c5a-409b-9db1-ed1e9c51916b\", \"firstName\": \"Anthony\", \"lastName\": \"Zurcher\", \"email\": \"newsroomznbc@gmail.com\", \"phone\": null, \"profession\": \"Interest\", \"personalWebPageURL\": \"https://znbc.co.zm\", \"followers\": 982000, \"following\": 0, \"location\": \"ZNBC, P.O Box 50015, Mass Media Complex, Alick Nkata Road, Lusaka., 10101\" }, { \"id\": \"48e7a87d-171b-47bf-853e-94ca5443483d\", \"firstName\": \"Anthony\", \"lastName\": \"Zurcher\", \"email\": \"info@creators.com\", \"phone\": \"+1 310-337-7003\", \"profession\": \"Arts & entertainment\", \"personalWebPageURL\": \"http://www.Creators.com\", \"followers\": 2000, \"following\": 0, \"location\": \"+1 310-337-7003\" } ]","title":"FB our data, saved in the mongoDB"},{"location":"HELP/#curl-example","text":"curl -X POST http://localhost:5001 -d \"{\\\"link\\\":\\\"https://www.facebook.com/mr.pallab.ghosh/\\\"}\" -H \"Content-Type: application/json\" ``` #### How to run python, FB page scrapper Create venv - virtual environment ```bash python3 -m venv fb_scapper_venv Activate created venv source fb_scapper_venv/bin/activate Install all fb_scrapper dependencies pip install -r requirements.txt And finally, run a script python3 -m fb_page_scrapper","title":"curl example"},{"location":"SDD/","text":"Software Design Document Introduction Purpose of the document This document service as a blueprint of Poirot capstone project. It provides a solution for collecting person's information based on open source resources. Scope of the project A project exposes REST APIs for getting input from the researcher, exposes REST API to get collected data, performs person of interest searches on LinkedIn and Facebook social networks without requiring to be logged in or having application tokens. Searches done anonymously. Intended audience Any researcher who fights with misinformation and the spreading of fake news. Project Overview and Goals A projects helps to the researches to gather information about person of interest. It helps to fight with spread of fake news or disinformation. A project uses: Java 17, gradle as a build tool, dockerd, Spring Boot framework, MongoDB as document database. Project length is about two month. Milestones Week 1 - Definition of problem Week 2 - requirement gathering Week 3 - requirement and resource analysis Week 4 - Software Design Document Week 5 - Implementation Week 6 - Testing, Final Polishing, finalization of documentation System Functionality Rest Controller - exposes REST APIs GET /linkedin/persons POST /linkedin/persons POST /facebook/persons GET /facebook/persons Services LinkedIn service - provides functionality for making LinkedIn searches and gathering relevant information. Facebook service - provide functionality for making Facebook searches and gathering relevant information. Repositories LinkedIn repository services as an interface for making common operations related to mongoDB Facebook repository services as an interface for making common operations related to mongoDB MongoDB - persists collected data, runs as a microservice, docker container. Facebook-Scrapper-Page - performs facebook scrapping pages. Runs as a docker container. Architectural Design provides a blueprint of the system\u2019s structure. Communication types: Client (a browser) communicates with a Service (Poirot) via HTTP synchronous protocol. A client sends request to the server and waits for the response. We may to use asynchronous protocol, for example AMQP however it is a more complicated and due to the time constraints we are not going to use it. Our application separated on two different microservices: a main one - Poirot and second one - mongo db server. Microservices helps to divide monolith application into separated and manageable services. As benefits, it gives us: scalability, maintainability and flexibility. Each service becomes more small and easier to deploy, independently. For example, if we fixed a bug in Poirot, we do not need to redeploy mongo server. It also reduces deployment time, make fault recovery more robust. Another benefit is a testing. Becasue to the nature of microservices the can in less effort test more efficiently. However, it is also adds overhead representing kind of disadvantages. For developer, it represents a difficulty to debug system. In case of many microservices it is challenging to get and synchronise logs from them. Data also can be out of consistency, management and integrity. To test single microservice is easy, however to test end two end becomes a challenge. Detailed Design Rest controllers PersonalInformationFetcher - exposes REST API to get input from the user. The payload is a json, PersonInfoRequest { \"firstName\":\"Jon\", \"lastName\":\"Snow\", \"email\":\"jon.snow@gameofthrones.com\", \"phone\":\"(666) JON-RAVEN\", \"location\":\"Westeros\" } Services LinkedInOps - firstly, performs a search query on DDG (duckduckgo), \"site:Linkedin.com 'Jon Snow'\". It takes only 5 top results. This parameter is in Constants, representing a limit. Can be changed. Once a result is gotten, it starts a LI personal information scraping. It uses available public LinkedIn profiles. If it is not available we get HTTP status - 999. It means that request is denied. The possible solution is to use \"https://translate.yandex.com/translate\", in current implementation it won't be implemented. When information is received LinkedInPerson.java it transformed to DMO (Data Model Object) and saved into database as a document. Database layer - repositories Spring Boot CRUD Repository abstracts database operations layer and makes its easier to make operations like: Update, Read, Create or Delete. To gather facebook user profiles we create a docker container with python fb page scrapper As a mongodb runs as separate docker container, our python facebook scrapper will run also as separate docker container. In order to run python scrapper we create Java process which will run 'docker exec 6ffda86269fa ulimit -a' and then grab the output which is as a json file and handle it and save into facebook collection. However, only public profiles can be scrapped. Each module or component should have its own subsection, explaining its purpose, functionalities, and internal workings. Include class diagrams, sequence diagrams, and other relevant technical drawings. References: Editorial Team. (n.d.). Software design document: What is it & how to create it! (template included). BIT.AI Blog. https://blog.bit.ai/software-design-document/ James Montemagno (April, 2022). Communication in a microservice architecture https://learn.microsoft.com/en-us/dotnet/architecture/microservices/architect-microservice-container-applications/communication-in-microservice-architecture Atlassian Blog - Advantages of microservices and disadvantages to know https://www.atlassian.com/microservices/cloud-computing/advantages-of-microservices","title":"Software Design"},{"location":"SDD/#software-design-document","text":"","title":"Software Design Document"},{"location":"SDD/#introduction","text":"","title":"Introduction"},{"location":"SDD/#purpose-of-the-document","text":"This document service as a blueprint of Poirot capstone project. It provides a solution for collecting person's information based on open source resources.","title":"Purpose of the document"},{"location":"SDD/#scope-of-the-project","text":"A project exposes REST APIs for getting input from the researcher, exposes REST API to get collected data, performs person of interest searches on LinkedIn and Facebook social networks without requiring to be logged in or having application tokens. Searches done anonymously.","title":"Scope of the project"},{"location":"SDD/#intended-audience","text":"Any researcher who fights with misinformation and the spreading of fake news.","title":"Intended audience"},{"location":"SDD/#project-overview-and-goals","text":"A projects helps to the researches to gather information about person of interest. It helps to fight with spread of fake news or disinformation. A project uses: Java 17, gradle as a build tool, dockerd, Spring Boot framework, MongoDB as document database. Project length is about two month.","title":"Project Overview and Goals"},{"location":"SDD/#milestones","text":"Week 1 - Definition of problem Week 2 - requirement gathering Week 3 - requirement and resource analysis Week 4 - Software Design Document Week 5 - Implementation Week 6 - Testing, Final Polishing, finalization of documentation","title":"Milestones"},{"location":"SDD/#system-functionality","text":"Rest Controller - exposes REST APIs GET /linkedin/persons POST /linkedin/persons POST /facebook/persons GET /facebook/persons Services LinkedIn service - provides functionality for making LinkedIn searches and gathering relevant information. Facebook service - provide functionality for making Facebook searches and gathering relevant information. Repositories LinkedIn repository services as an interface for making common operations related to mongoDB Facebook repository services as an interface for making common operations related to mongoDB MongoDB - persists collected data, runs as a microservice, docker container. Facebook-Scrapper-Page - performs facebook scrapping pages. Runs as a docker container.","title":"System Functionality"},{"location":"SDD/#architectural-design","text":"provides a blueprint of the system\u2019s structure. Communication types: Client (a browser) communicates with a Service (Poirot) via HTTP synchronous protocol. A client sends request to the server and waits for the response. We may to use asynchronous protocol, for example AMQP however it is a more complicated and due to the time constraints we are not going to use it. Our application separated on two different microservices: a main one - Poirot and second one - mongo db server. Microservices helps to divide monolith application into separated and manageable services. As benefits, it gives us: scalability, maintainability and flexibility. Each service becomes more small and easier to deploy, independently. For example, if we fixed a bug in Poirot, we do not need to redeploy mongo server. It also reduces deployment time, make fault recovery more robust. Another benefit is a testing. Becasue to the nature of microservices the can in less effort test more efficiently. However, it is also adds overhead representing kind of disadvantages. For developer, it represents a difficulty to debug system. In case of many microservices it is challenging to get and synchronise logs from them. Data also can be out of consistency, management and integrity. To test single microservice is easy, however to test end two end becomes a challenge.","title":"Architectural Design"},{"location":"SDD/#detailed-design","text":"Rest controllers PersonalInformationFetcher - exposes REST API to get input from the user. The payload is a json, PersonInfoRequest { \"firstName\":\"Jon\", \"lastName\":\"Snow\", \"email\":\"jon.snow@gameofthrones.com\", \"phone\":\"(666) JON-RAVEN\", \"location\":\"Westeros\" } Services LinkedInOps - firstly, performs a search query on DDG (duckduckgo), \"site:Linkedin.com 'Jon Snow'\". It takes only 5 top results. This parameter is in Constants, representing a limit. Can be changed. Once a result is gotten, it starts a LI personal information scraping. It uses available public LinkedIn profiles. If it is not available we get HTTP status - 999. It means that request is denied. The possible solution is to use \"https://translate.yandex.com/translate\", in current implementation it won't be implemented. When information is received LinkedInPerson.java it transformed to DMO (Data Model Object) and saved into database as a document. Database layer - repositories Spring Boot CRUD Repository abstracts database operations layer and makes its easier to make operations like: Update, Read, Create or Delete. To gather facebook user profiles we create a docker container with python fb page scrapper As a mongodb runs as separate docker container, our python facebook scrapper will run also as separate docker container. In order to run python scrapper we create Java process which will run 'docker exec 6ffda86269fa ulimit -a' and then grab the output which is as a json file and handle it and save into facebook collection. However, only public profiles can be scrapped. Each module or component should have its own subsection, explaining its purpose, functionalities, and internal workings. Include class diagrams, sequence diagrams, and other relevant technical drawings.","title":"Detailed Design"},{"location":"SDD/#_1","text":"References: Editorial Team. (n.d.). Software design document: What is it & how to create it! (template included). BIT.AI Blog. https://blog.bit.ai/software-design-document/ James Montemagno (April, 2022). Communication in a microservice architecture https://learn.microsoft.com/en-us/dotnet/architecture/microservices/architect-microservice-container-applications/communication-in-microservice-architecture Atlassian Blog - Advantages of microservices and disadvantages to know https://www.atlassian.com/microservices/cloud-computing/advantages-of-microservices","title":""},{"location":"SDSM/","text":"Software Deployment and Software Maintenance The CI/CD process looks like: Application has a configuration file application.properties . At bootstrap step application reads all required parameters from this file. build.gradle contains tasks responsible for build, code coverage, testing and code formating. It also contains dependencies of the application. Version control We use github as a repository and tooling and git as a version control. It is defacto version control. The link to the repo . We work with branches. The main one called main branch. The idea to use branches to make separation of the team work and reduce risk of untested work. When all required testing is done, we merge it to the main . Tags & Releases The entire process presented here In Poirot project new release is done when milestone is achieved. When new release is set up, we created new docker image and redeploy the application. Documentation Oragui (2024) writes: \"Software documentation is a crucial part of working software. Software documentation is crucial because it can assist users understand how to use your software, it can provide developers and other technical stakeholders with information about the technical aspects of your software, and it can help ensure that the software development process is consistent and repeatable.\". Documentation is in md files. We use mkdocs which generates project's documentation. Prerequisites python3 -m venv doc_venv && source doc_venv/bin/activate && pip install mkdocs Configuration file mkdocs.yml Building ./scripts/mkdocs_build.sh The documentation is hosted on github.com mkdocs gh-deploy In Poirot project we also use javadoc a documentation of the source code. To generate it, simply run gradle javadoc Deployment Strategies and Maintenance Techniques Software deployment strategy types include: Basic Multi-service Rolling Deployment Blue Green Deployment Canary Deployment A/B Testing Why Docker? It helps us to run our application in isolated environment. It makes management more easy, if we will use k8s we could easlily to scale up, to scale down. k8s also checks health check of the microservice, and if it fails it will restart it again. Before docker we can simply run the following command: gradle clean build And then java -jar build/libs/poirot-0.0.1-SNAPSHOT.jar It is good, but only works locally. To build docker docker build --tag=poirot:latest . To run a docker docker run -p 9090:9090 poirot:latest Effectiveness of Strategies Used References Yiadh TLIJANI (April, 2024) 8 Deployment Strategies Explained and Compared https://devopsbootcamp.org/8-deployment-strategies-explained-and-compared/ Slavi\u0161a Avramovi\u0107 (January 8, 2024) Dockerizing a Spring Boot Application https://www.baeldung.com/dockerizing-spring-boot-application Github Managing releases in a repository https://docs.github.com/en/repositories/releasing-projects-on-github/managing-releases-in-a-repository Documentation - Creating Project Documentation https://www.mkdocs.org/ Poirot documentation site https://hob1t.github.io/poirot/ David, O. (2023, April 26). Software documentation best practices with examples . Helpjuice. Martin, M. (2023, April 8). Software configuration management in software engineering. Guru99. Software deployment- definitions and overview. (n. d). Sumo Logic. What is a software maintenance process? 4 types of software maintenance. (n.d.). Thales.","title":"Software CI/CD"},{"location":"SDSM/#software-deployment-and-software-maintenance","text":"The CI/CD process looks like: Application has a configuration file application.properties . At bootstrap step application reads all required parameters from this file. build.gradle contains tasks responsible for build, code coverage, testing and code formating. It also contains dependencies of the application.","title":"Software Deployment and Software Maintenance"},{"location":"SDSM/#version-control","text":"We use github as a repository and tooling and git as a version control. It is defacto version control. The link to the repo . We work with branches. The main one called main branch. The idea to use branches to make separation of the team work and reduce risk of untested work. When all required testing is done, we merge it to the main .","title":"Version control"},{"location":"SDSM/#tags-releases","text":"The entire process presented here In Poirot project new release is done when milestone is achieved. When new release is set up, we created new docker image and redeploy the application.","title":"Tags &amp; Releases"},{"location":"SDSM/#documentation","text":"Oragui (2024) writes: \"Software documentation is a crucial part of working software. Software documentation is crucial because it can assist users understand how to use your software, it can provide developers and other technical stakeholders with information about the technical aspects of your software, and it can help ensure that the software development process is consistent and repeatable.\". Documentation is in md files. We use mkdocs which generates project's documentation. Prerequisites python3 -m venv doc_venv && source doc_venv/bin/activate && pip install mkdocs Configuration file mkdocs.yml Building ./scripts/mkdocs_build.sh The documentation is hosted on github.com mkdocs gh-deploy In Poirot project we also use javadoc a documentation of the source code.","title":"Documentation"},{"location":"SDSM/#to-generate-it-simply-run","text":"gradle javadoc","title":"To generate it, simply run"},{"location":"SDSM/#deployment-strategies-and-maintenance-techniques","text":"Software deployment strategy types include: Basic Multi-service Rolling Deployment Blue Green Deployment Canary Deployment A/B Testing Why Docker? It helps us to run our application in isolated environment. It makes management more easy, if we will use k8s we could easlily to scale up, to scale down. k8s also checks health check of the microservice, and if it fails it will restart it again. Before docker we can simply run the following command: gradle clean build And then java -jar build/libs/poirot-0.0.1-SNAPSHOT.jar It is good, but only works locally.","title":"Deployment Strategies and Maintenance Techniques"},{"location":"SDSM/#to-build-docker","text":"docker build --tag=poirot:latest .","title":"To build docker"},{"location":"SDSM/#to-run-a-docker","text":"docker run -p 9090:9090 poirot:latest","title":"To run a docker"},{"location":"SDSM/#effectiveness-of-strategies-used","text":"","title":"Effectiveness of Strategies Used"},{"location":"SDSM/#references","text":"Yiadh TLIJANI (April, 2024) 8 Deployment Strategies Explained and Compared https://devopsbootcamp.org/8-deployment-strategies-explained-and-compared/ Slavi\u0161a Avramovi\u0107 (January 8, 2024) Dockerizing a Spring Boot Application https://www.baeldung.com/dockerizing-spring-boot-application Github Managing releases in a repository https://docs.github.com/en/repositories/releasing-projects-on-github/managing-releases-in-a-repository Documentation - Creating Project Documentation https://www.mkdocs.org/ Poirot documentation site https://hob1t.github.io/poirot/ David, O. (2023, April 26). Software documentation best practices with examples . Helpjuice. Martin, M. (2023, April 8). Software configuration management in software engineering. Guru99. Software deployment- definitions and overview. (n. d). Sumo Logic. What is a software maintenance process? 4 types of software maintenance. (n.d.). Thales.","title":"References"},{"location":"TSD/","text":"Testing and Security Document Testing Unit testing This project is developed using TDD (test driven development) methodology. It means, you start developing with test, then go to the code. At the end, your code is covered by unit tests. Test cases: LinkedInOps End-2-End testing Next, is e2e testing. The idea is to run entire system from the start to the end, where a request will pass every flow. It resembles real system in the production environment. Load testing It puts a system into the stress. It helps to find the limits of the system. REST API to be under the test Code Coverage The quality is not only functionality that works. It is also relates to the code coverage. What percentage of our code covered by tests. I use Jacoco as code coverage checker. Code Style Sloppy or smelly code contains hidden bugs which is really difficult to find. Gradle introduces task called spotless which removes unused imports, reformats code and even more. Security \"Basic security goals such as confidentiality, integrity, and availability.\" (Alenezi, 2019). He also adds: \"Hacking, Denial of services, virus, fire, and power loss are sources of systematic risk. Whereas, unsystematic risk is the portion of total risk that is unique to the enterprise. Data loss or misuse, human error, application error, and inside attack can be examples for unsystematic risk.\" In poirot I did ZAP testing. Endpoint was: http://localhost:9090/swagger-ui/index.html . Here are the results: In addition, added gradle OWASP dependency-check tasks. Results as following: > Task :dependencyCheckAnalyze Verifying dependencies for project poirot Checking for updates and analyzing dependencies for vulnerabilities An NVD API Key was not provided - it is highly recommended to use an NVD API key as the update can take a VERY long time without an API Key Generating report for project poirot Found 0 vulnerabilities in project poirot Risk Management Possible Risks: Database is not reponsding to responding very slow DuckDuckGo prevents to make searches FB page scrapper returns \"Session is not valid\" Our application should implement Zero Trust paradigm, which basically means each request represents potential danger. References: Mario Casari (July, 2024) How to Perform Load Testing in Spring Boot with Gatling https://www.freecodecamp.org/news/how-to-integrate-spring-boot-with-gatling/ Alenezi, M., & Almuairfi, S. (2019). Security risks in the software development lifecycle. International Journal of Recent Technology and Engineering (IJRTE), 8(3), 22773878. https://www.ijrte.org/wp-content/uploads/papers/v8i3/C5374098319.pdf","title":"Testing & Security Plan"},{"location":"TSD/#testing-and-security-document","text":"","title":"Testing and Security Document"},{"location":"TSD/#testing","text":"","title":"Testing"},{"location":"TSD/#unit-testing","text":"This project is developed using TDD (test driven development) methodology. It means, you start developing with test, then go to the code. At the end, your code is covered by unit tests. Test cases: LinkedInOps","title":"Unit testing"},{"location":"TSD/#end-2-end-testing","text":"Next, is e2e testing. The idea is to run entire system from the start to the end, where a request will pass every flow. It resembles real system in the production environment.","title":"End-2-End testing"},{"location":"TSD/#load-testing","text":"It puts a system into the stress. It helps to find the limits of the system.","title":"Load testing"},{"location":"TSD/#rest-api-to-be-under-the-test","text":"","title":"REST API to be under the test"},{"location":"TSD/#code-coverage","text":"The quality is not only functionality that works. It is also relates to the code coverage. What percentage of our code covered by tests. I use Jacoco as code coverage checker.","title":"Code Coverage"},{"location":"TSD/#code-style","text":"Sloppy or smelly code contains hidden bugs which is really difficult to find. Gradle introduces task called spotless which removes unused imports, reformats code and even more.","title":"Code Style"},{"location":"TSD/#security","text":"\"Basic security goals such as confidentiality, integrity, and availability.\" (Alenezi, 2019). He also adds: \"Hacking, Denial of services, virus, fire, and power loss are sources of systematic risk. Whereas, unsystematic risk is the portion of total risk that is unique to the enterprise. Data loss or misuse, human error, application error, and inside attack can be examples for unsystematic risk.\" In poirot I did ZAP testing. Endpoint was: http://localhost:9090/swagger-ui/index.html . Here are the results: In addition, added gradle OWASP dependency-check tasks. Results as following: > Task :dependencyCheckAnalyze Verifying dependencies for project poirot Checking for updates and analyzing dependencies for vulnerabilities An NVD API Key was not provided - it is highly recommended to use an NVD API key as the update can take a VERY long time without an API Key Generating report for project poirot Found 0 vulnerabilities in project poirot","title":"Security"},{"location":"TSD/#risk-management","text":"Possible Risks: Database is not reponsding to responding very slow DuckDuckGo prevents to make searches FB page scrapper returns \"Session is not valid\" Our application should implement Zero Trust paradigm, which basically means each request represents potential danger.","title":"Risk Management"},{"location":"TSD/#references","text":"Mario Casari (July, 2024) How to Perform Load Testing in Spring Boot with Gatling https://www.freecodecamp.org/news/how-to-integrate-spring-boot-with-gatling/ Alenezi, M., & Almuairfi, S. (2019). Security risks in the software development lifecycle. International Journal of Recent Technology and Engineering (IJRTE), 8(3), 22773878. https://www.ijrte.org/wp-content/uploads/papers/v8i3/C5374098319.pdf","title":"References:"},{"location":"architechture/","text":"Project Name Poirot, like famous detective Hercule Poirot High Level design VPN Gathering person's information not always legally allowed or person's accreditated task. It is quite important to hide searcher's information. VPN helps to give a solution for this requirement. Gewirtz (2024) explains: \"The purpose of a VPN is to provide you with security and privacy as you communicate over the internet. Most of the internet's core protocols (communication methods) were designed to route around failure, rather than secure data. While some standards have developed, not all internet apps are secure. Many still send their information without any security or privacy protection whatsoever. This leaves any internet user vulnerable to criminals who might steal your banking or credit card information, governments who might want to eavesdrop on their citizens, and other internet users who might want to spy on you for a whole range of nefarious reasons.\" If a researcher logged in into LI account and looks for user's profile, LI notifies a person what a \"searcher\" was looking his profile. Using VPN we will hide part of such information. In addition, using Google Dorks we gather information without showing up our identity to the person of interest. Software requirements Use cases: As a user I would like to be able to gather person's information on LinkedIn As a user I would like to be able to gather person's information on Facebook As a user I would like to persist gathered information into database As a user I would like to use CRUD repository As a user I would like to get REST API for CRUD operations Introduction As part of fight with misinformation, disinformation and fake news detection is one of the required steps are to get knowledge about person of interest. Existing OSINT tools can bring problems related to security or lack of maintenance. The purpose of this project to create a suitable solution. Product scope is having MVC layer, Business layer & Persistence layer. However, it will not have a data analytics and data visualization layers. Functional Requirements External Interface Requirements User Interface is a Swagger pages which make call to the backend functionality. Non-functional Requirements Security Capacity - ideally storage should be dynamically allocated, aws s3 is a good candidate. For the capstone purposes it is enough to have 250Gb. Compatibility - minimum requirements for hardware are: RAM 8GB, CPU Apple M1, 8 Cores. Reliability and availability - response for each request should be persisted. DB should have a backup last 24 hours. Each microservice should implement its healthcheck, for cluster management. Scalability - the minimum number of pods is one, maximum is 3. k8s configured for scale up or scale down. Maintainability - CI/CD triggered on each commit. In addition, on master merge triggers a redeploy logic. In addition, part of CI process added logic of checking dependencies updates and security code scanning. Usability - a service exposes Swagger, accepts curl commands as well. Project Resources Resources Identified A computer a main source of machinery. Text editor or IDE to write code, edit documentation. Browser - a firefox or chrome. To surf internet. Internet connection - to do a research VPN - for secure connection outside the world. Any VPN is suitable, in my case i use Surfshark. A person with required skill set (me) Time - entire project takes 6 weeks, each week is intended to Specific Sprint. A lenght of each Spring is exactly one week long. Challenges gathering facebook information Facebook requires to be registered in order to get user's information. Registration allow to sources to know who is gathering information. Our goal to expose as little as possible information for anybody. So, first we do a google dorks as site:facebook.com \"John Doe\" . It brings us a search page which we have to scrap. One of the scapping results is user's profile URL which contains information related to username. Username can be as same as a user's first and last names or different. In addition, we can also find userID info, which can be useful. Next challenge is to parse search results and get valuable information. Fortunately, there are a lot of available libraries which helps us to do it. During the number of ddg request I got: \"Please complete the following challenge to confirm this search was made by a human\" Basically it means I cannot automate web scrapping using current approach. Management of Resources Time The longevity of the project is about 6 weeks. Each week 15 hours of work. Raw materials /software to be used IDE - Intellij, java 17, python 3, docker, macOS, firefox as a browser, VPN - surfshark Docker, MongoDB, Spring Boot framework, gradle, docker-compose Java is good language, I am familiar with it, 17 version is a minimum version that requires Spring Boot. Docker is a technology which makes possible to run application as a service. Using k8s makes to manage our cluster of microservices if we need to scale. In general using docker images gives us ability in matter of seconds to redeploy our application for more newest version. Gradle is a build tool. To build a project we have two options: maven or gradle. Gradle is more modern building tool. MongoDB is chosen because it is document database, allows us to save data simply as json file. To use relational database is not suitable for this kind of project due to the data model. In addition to scale not relational database is much easier that relational. Human resources Me and Professor as mentor and adviser. I am going to implement this project. Machinery and equipment MacBook AIR it is what I have. Financial Resources A cost of the project is the much as 300 usd. Infomration and data Using duckduck search engine, Google Scholar and google dorks. Using google requires to be loged in, which not serves well for our porposes, duckduck is allows to make search queries anonymously. Also any information used or looked at mentioned in References. Gathered information saved in MongoDB. Software Requirements and Specification Software Requirements Should expose REST API in order to get input from the user like first name, last name, email, location Optional: email, location Should save gathered information about a person of interest. Should expose REST API for CRUD operations Should be implemented as microservice(s) and packeged as a Dockerfile. Code should be kept in github repository Software Design Document ** Gathering Flow ** Interface of REST CRUD operations C reate operation puts a new document/entry into database/collection. R ead operation gets a document/entry from database/collection U pdate operation changes property(-s) of the document/entry D elete operation deletes a document/entry from the database/collection Controllers Person's information Gathering Controller CRUD Controller Repositories In the world of Spring Boot a repository is an interface which abstracts database operations. FaceBook Repository List of allowed operations Saves a given entity Gets the entity by ID Gets all entities by paging Deletes the given entity LinkedIn Repository Data Access Objects Person Location Alumni Image URL - for reverse search First Name Last Name Phone Email Follows - a counter Connection # Works for LinkedIn URL If we get status=999 !archivemd ${https://www.linkedin.com/in/ashley-hume-5733b345} https://archive.md/https://www.linkedin.com/in/ashley-hume-5733b345 https://archive.md/https://www.facebook.com/jonsnowandassociates/about or https://translate.yandex.com/translate References David Gewirtz (May 28, 2024). What is a VPN and why do you need one? https://www.zdnet.com/article/what-is-a-vpn-and-why-do-you-need-one-all-your-virtual-private-network-questions-answered/ Ishan Oshada GDorks github repository https://github.com/Ishanoshada/GDorks Spring Boot - data repository https://docs.spring.io/spring-data/data-commons/docs/1.6.1.RELEASE/reference/html/repositories.html","title":"Architechture"},{"location":"architechture/#project-name","text":"Poirot, like famous detective Hercule Poirot","title":"Project Name"},{"location":"architechture/#high-level-design","text":"","title":"High Level design"},{"location":"architechture/#vpn","text":"Gathering person's information not always legally allowed or person's accreditated task. It is quite important to hide searcher's information. VPN helps to give a solution for this requirement. Gewirtz (2024) explains: \"The purpose of a VPN is to provide you with security and privacy as you communicate over the internet. Most of the internet's core protocols (communication methods) were designed to route around failure, rather than secure data. While some standards have developed, not all internet apps are secure. Many still send their information without any security or privacy protection whatsoever. This leaves any internet user vulnerable to criminals who might steal your banking or credit card information, governments who might want to eavesdrop on their citizens, and other internet users who might want to spy on you for a whole range of nefarious reasons.\" If a researcher logged in into LI account and looks for user's profile, LI notifies a person what a \"searcher\" was looking his profile. Using VPN we will hide part of such information. In addition, using Google Dorks we gather information without showing up our identity to the person of interest.","title":"VPN"},{"location":"architechture/#software-requirements","text":"","title":"Software requirements"},{"location":"architechture/#use-cases","text":"As a user I would like to be able to gather person's information on LinkedIn As a user I would like to be able to gather person's information on Facebook As a user I would like to persist gathered information into database As a user I would like to use CRUD repository As a user I would like to get REST API for CRUD operations","title":"Use cases:"},{"location":"architechture/#introduction","text":"As part of fight with misinformation, disinformation and fake news detection is one of the required steps are to get knowledge about person of interest. Existing OSINT tools can bring problems related to security or lack of maintenance. The purpose of this project to create a suitable solution. Product scope is having MVC layer, Business layer & Persistence layer. However, it will not have a data analytics and data visualization layers. Functional Requirements","title":"Introduction"},{"location":"architechture/#external-interface-requirements","text":"User Interface is a Swagger pages which make call to the backend functionality.","title":"External Interface Requirements"},{"location":"architechture/#non-functional-requirements","text":"Security Capacity - ideally storage should be dynamically allocated, aws s3 is a good candidate. For the capstone purposes it is enough to have 250Gb. Compatibility - minimum requirements for hardware are: RAM 8GB, CPU Apple M1, 8 Cores. Reliability and availability - response for each request should be persisted. DB should have a backup last 24 hours. Each microservice should implement its healthcheck, for cluster management. Scalability - the minimum number of pods is one, maximum is 3. k8s configured for scale up or scale down. Maintainability - CI/CD triggered on each commit. In addition, on master merge triggers a redeploy logic. In addition, part of CI process added logic of checking dependencies updates and security code scanning. Usability - a service exposes Swagger, accepts curl commands as well.","title":"Non-functional Requirements"},{"location":"architechture/#project-resources-resources-identified","text":"A computer a main source of machinery. Text editor or IDE to write code, edit documentation. Browser - a firefox or chrome. To surf internet. Internet connection - to do a research VPN - for secure connection outside the world. Any VPN is suitable, in my case i use Surfshark. A person with required skill set (me) Time - entire project takes 6 weeks, each week is intended to Specific Sprint. A lenght of each Spring is exactly one week long.","title":"Project Resources Resources Identified"},{"location":"architechture/#challenges-gathering-facebook-information","text":"Facebook requires to be registered in order to get user's information. Registration allow to sources to know who is gathering information. Our goal to expose as little as possible information for anybody. So, first we do a google dorks as site:facebook.com \"John Doe\" . It brings us a search page which we have to scrap. One of the scapping results is user's profile URL which contains information related to username. Username can be as same as a user's first and last names or different. In addition, we can also find userID info, which can be useful. Next challenge is to parse search results and get valuable information. Fortunately, there are a lot of available libraries which helps us to do it. During the number of ddg request I got: \"Please complete the following challenge to confirm this search was made by a human\" Basically it means I cannot automate web scrapping using current approach.","title":"Challenges gathering facebook information"},{"location":"architechture/#management-of-resources","text":"","title":"Management of Resources"},{"location":"architechture/#time","text":"The longevity of the project is about 6 weeks. Each week 15 hours of work.","title":"Time"},{"location":"architechture/#raw-materials-software-to-be-used","text":"IDE - Intellij, java 17, python 3, docker, macOS, firefox as a browser, VPN - surfshark Docker, MongoDB, Spring Boot framework, gradle, docker-compose Java is good language, I am familiar with it, 17 version is a minimum version that requires Spring Boot. Docker is a technology which makes possible to run application as a service. Using k8s makes to manage our cluster of microservices if we need to scale. In general using docker images gives us ability in matter of seconds to redeploy our application for more newest version. Gradle is a build tool. To build a project we have two options: maven or gradle. Gradle is more modern building tool. MongoDB is chosen because it is document database, allows us to save data simply as json file. To use relational database is not suitable for this kind of project due to the data model. In addition to scale not relational database is much easier that relational.","title":"Raw materials /software to be used"},{"location":"architechture/#human-resources","text":"Me and Professor as mentor and adviser. I am going to implement this project.","title":"Human resources"},{"location":"architechture/#machinery-and-equipment","text":"MacBook AIR it is what I have.","title":"Machinery and equipment"},{"location":"architechture/#financial-resources","text":"A cost of the project is the much as 300 usd.","title":"Financial Resources"},{"location":"architechture/#infomration-and-data","text":"Using duckduck search engine, Google Scholar and google dorks. Using google requires to be loged in, which not serves well for our porposes, duckduck is allows to make search queries anonymously. Also any information used or looked at mentioned in References. Gathered information saved in MongoDB.","title":"Infomration and data"},{"location":"architechture/#software-requirements-and-specification","text":"","title":"Software Requirements and Specification"},{"location":"architechture/#software-requirements_1","text":"Should expose REST API in order to get input from the user like first name, last name, email, location Optional: email, location Should save gathered information about a person of interest. Should expose REST API for CRUD operations Should be implemented as microservice(s) and packeged as a Dockerfile. Code should be kept in github repository","title":"Software Requirements"},{"location":"architechture/#software-design-document","text":"** Gathering Flow ** Interface of REST CRUD operations C reate operation puts a new document/entry into database/collection. R ead operation gets a document/entry from database/collection U pdate operation changes property(-s) of the document/entry D elete operation deletes a document/entry from the database/collection Controllers Person's information Gathering Controller CRUD Controller Repositories In the world of Spring Boot a repository is an interface which abstracts database operations. FaceBook Repository List of allowed operations Saves a given entity Gets the entity by ID Gets all entities by paging Deletes the given entity LinkedIn Repository Data Access Objects Person Location Alumni Image URL - for reverse search First Name Last Name Phone Email Follows - a counter Connection # Works for LinkedIn URL","title":"Software Design Document"},{"location":"architechture/#if-we-get-status999","text":"!archivemd ${https://www.linkedin.com/in/ashley-hume-5733b345} https://archive.md/https://www.linkedin.com/in/ashley-hume-5733b345 https://archive.md/https://www.facebook.com/jonsnowandassociates/about or https://translate.yandex.com/translate","title":"If we get status=999"},{"location":"architechture/#references","text":"David Gewirtz (May 28, 2024). What is a VPN and why do you need one? https://www.zdnet.com/article/what-is-a-vpn-and-why-do-you-need-one-all-your-virtual-private-network-questions-answered/ Ishan Oshada GDorks github repository https://github.com/Ishanoshada/GDorks Spring Boot - data repository https://docs.spring.io/spring-data/data-commons/docs/1.6.1.RELEASE/reference/html/repositories.html","title":"References"},{"location":"capstone_report/","text":"Part A Title Page Abstract Table of contents Introduction Literature Review Methodology Results Discussion Conclusion References Appendices Introduction Background Back to 2022, Russia treacherously invaded to Ukraine. Part of my family lives there. I was shocked, could not believe. From the first minutes I started to read news from the available source. The news came in contradiction, one news said something, another one the opposite. After a week of such reading, it became clear to me, that part of the news is fake, spread misinformation, present untrue facts. Only \"gut feelings\" helps me somehow divide the wheat from the chaff. I realized that the current state of matter does not exist. I simply wanted to get news and check if it is true or not. Problem statement Alghamdi (2023) explains: \"The proliferation of fake news on social media platforms poses significant challenges to society and individuals, leading to negative impacts. As the tactics employed by purveyors of fake news continue to evolve, there is an urgent need for automatic fake news detection (FND) to mitigate its adverse social consequences.\" Machine Learning and Artificial Intelligence helps to fight back, in detecting fake news. They heavily depend on data. However, all these methods analyzing text, using NLP or other available methods. Some of such methods are pretty good. Such approaches have drawbacks. They require having a lot of data, they require to be a data science to prepare data, to shape it. In addition, this data is historical data. In the rise of chatGPT, creating a fake news it matters of seconds. News by nature changing. To keep up with changes is a tremendous task and always it suceeds. What if we gather information about person who spreads the news? It should be quicker and simplier. Two most popular social networks may contain information related to the person of interest like location, profession, group(s), followers, phone and email, account date creation. Some researches show that a public person is more likely not to spread fake information than a regular person. Knowing who is the person gives us a clue can this person spread a fake news or not, with probability between 0 and 1. It also could help to categorize a person if it is a human, bot, cyborg or troll. Existing tools are cost money, often outdated or/and difficult to use. The following questions should be answered and pragmatic steps to be implemented. How does information related to POI look? Is the information about POI the same on LinkedIn and Facebook? Is gathering information legal? Is it ethical? What are existing methods? Web scrappping, how to extract data? When search engine blocks the request, what can be done? When Facebook sends http 999 error code, what does it mean? What information helps to build a model? What database to choose? How to store data? How to retrieve data? How to analyze data? How to visualize data? Literature Review To formulate the theory and resolve the research issues, a detailed literature review was executed. Access to journals and IEEE transactions was made possible via the servers of the University of People. This section represents the litrerature in the field of full text search, machine learning, and data gathering. The research focuses on finding a person of interest using publicly available sources, especially those which are on social networks, like linkedIn and facebook. Most of the literature found on GS/IEEE concentrating their efforts on gathering information using cameras, mobile phones or other gadgets. There are not available trusted articles that could have been used to this research. In addition, because Facebook changes their policies too often, any research older than one year ago becomes unrelevant. Frogoso (2023) writes: \"As many aspects of our lives depend on or exist only on the internet, we might be sharing information and details of our personal identities and private life without knowing.\" To perform a searching of POI we have to start looking for official information related to our \"target\" it may be a location, phone number or email. LinkedIn is a valuable source of information which can give us a profession, location, connections and groups a person is following. The date of creation of the account, number of follwers and groups can differentiate a real person from the fake one. Having an email, adds the ability to check if this mail was pawned or not. Location used as a filter to minimize the number of POIs. Web Scrapping Hillier (2021) defines a web scraping as: \"Web scraping (or data scraping) is a technique used to collect content and data from the internet. This data is usually saved in a local file so that it can be manipulated and analyzed as needed. Common data types organizations collect include images, videos, text, product information, customer sentiments and reviews (on sites like Twitter, Yell, or Tripadvisor), and pricing from comparison websites.\" Our use case of web scrapping is gathering information related to person of interest from search engine results. Google Dorks Jamie (2023) explains: \"Google Dorking, also known as Google Hacking, is a technique used to find sensitive information or confidential data on the Internet by using advanced operators in Google search queries. These special operators make it possible to search for specific types of files or information. These files or information may be login pages, unsecured databases, and sensitive documents. This technique is helpful for many purposes, such as personal research, job applications, or even cybersecurity and penetration testing.\" In our case: site:linkedin.com \"Jon Snow\" site:facebook.com \"Jon Snow\" Document database \"A document database is a type of NoSQL database which stores data as JSON documents instead of columns and rows. JSON is a native language used to both store and query data. These documents can be grouped together into collections to form database systems. Using JSON enables app developers to store and query data in the same document-model format that they use to organize their app\u2019s code. The object model can be converted into other formats, such as JSON, BSON and XML.\" (Williams, 2021). Facebook Data Model LinkedIn Data Model MongoDB Spring Repository \"The central interface in the Spring Data repository abstraction is Repository. It takes the domain class to manage as well as the identifier type of the domain class as type arguments. This interface acts primarily as a marker interface to capture the types to work with and to help you to discover interfaces that extend this one.\" (Spring.io, 2024) For Facebook data For LinkedIn data CrudRepository interface defines basic database operations: Create, Read, Update and Delete. Create operation saves entity into repository. Read operation finds one entity in the db and returns it. Search key may be id Update operation finds one entity, updates required fields and saves again. Delete operation finds the entity and if it exists, deletes from the repository. Facebook Page Scraper The author of this library sP0t writes: \"facebook-page-info-scraper is a Python package that provides a convenient way to crawl information from Facebook pages. With this package, you can scrape Facebook data with unlimited calls. Whether you're a researcher, a data enthusiast, or a developer working on Facebook-related projects, this library simplifies the data extraction process. It uses Selenium for web scraping and retrieves Facebook page details such as the page name, category, address, email, follower count, and more.\" Microservice Architecture Azure DevOps (2022) explains: \"Microservices are a popular architectural style for building applications that are resilient, highly scalable, independently deployable, and able to evolve quickly.\" Benefits: Agility \u2014 \"Because microservices are deployed independently, it's easier to manage bug fixes and feature releases.\" (Azure DevOps 2022) Small, focused teams - \"A microservice should be small enough that a single feature team can build, test, and deploy it. Small team sizes promote greater agility.\" (Azure DevOps 2022) Small code base - \"In a monolithic application, there is a tendency over time for code dependencies to become tangled. Adding a new feature requires touching code in a lot of places.\" (Azure DevOps 2022) Mix of technologies - \"Teams can pick the technology that best fits their service, using a mix of technology stacks as appropriate.\" (Azure DevOps 2022) Fault isolation - \"If an individual microservice becomes unavailable, it won't disrupt the entire application, as long as any upstream microservices are designed to handle faults correctly.\" (Azure DevOps 2022) Scalability - \"Services can be scaled independently, letting you scale out subsystems that require more resources, without scaling out the entire application. Using an orchestrator such as Kubernetes, you can pack a higher density of services onto a single host, which allows for more efficient utilization of resources\" (Azure DevOps 2022) Data isolation - It is much easier to perform schema updates, because only a single microservice is affected. (Azure DevOps 2022). Poirot is built on this principle. It has the following microservices: Poirot itself, rest API, controllers, scrapers and databse template. Facebook page Scrapper - a server which listens to upcoming requests and scraps FB pages. MongoDB a document database runs as independent microservice. If needed, there is ability to scale up any of those services. Docker As mentioned in Docker documentation: \"Docker is an open platform for developing, shipping, and running applications. Docker enables you to separate your applications from your infrastructure so you can deliver software quickly. With Docker, you can manage your infrastructure in the same ways you manage your applications. By taking advantage of Docker's methodologies for shipping, testing, and deploying code, you can significantly reduce the delay between writing code and running it in production.\" In Poirot we use Docker because of: DuploCloud (2023) put it this way: Part B Methodology The implemented system Poirot is an intelligent system that assists to gather information about POI. It aggregates available information on two social networks: LinkedIn and Facebook using open sources, information that are public and available for everyone. The purpose was to create a working system which will deal with hiding information about researcherss, to gather information on the internet, to parse such unstructured information, to build a model and save into reliable storage for the future use and analysis. To successfully tackle the defined objectives and sub-objectives, this research project undertakes a thorough exploration of important research questions. These inquiries are central to devising a feasible solution. This section provides an overview of how this research project was conducted, highlighting the steps taken throughout the process. A detailed flow diagram illustrating the main activities is presented in Figure 1. The methodology outlines the intricate research steps represented in a flow chart, which were implemented to realize the research plan. It accentuates the systematic approach necessary to achieve the aims of this thesis and the important stages of the research initiative. Initially, the idea was created by doing research of OSINT tools and methods of gathering information on person of interest. The bigger idea was and still is to find efficient methods and approaches to fignt with disinformation, misinformation and spread of fake news. Knowing a person, knowing his presence on social networks, bounding to particular groups, especially on Facebook gives as clues if this person could spread fake news intentionally, if it is a fake account, or it is kind of bot, cyborg or troll. Once the scope of the problem was identified, stakeholders were contacted, informed. The next step was revewing existing literature. With the help of Google Scholars, research questions were shaped and developed. Then, choosing the right approach of searching data has beed examined. Available options were: to use FB & LI APIs or find different methods. Having digged into their APIs became clear that part of the major requirements could not meet. Then another idea was taken into account. What of to use Google Dorks queries to bring search resuls? It worked as a charm, the only problem was - Google required to be logged in. However, DuckDuckGo provided the same functionalit anonymously. Literature review starts with understanding gathering methods using open sources, like the internet. It was concentrated on the available tools, techniques and algorithms. The procedure illustrates the comprehensive research steps presented in a flow chart format, executed to fulfill the research plan. It emphasizes the sequential approach taken to reach the objectives of this thesis, as well as the significant phases of the research project. Furthemore, literature review continues to subjects of machine learning, finding appropriate learning algorithms, building training data and validation. Because of time constraints, this part is apart from the project. Results After trials and errors the POIROT system was designed and implemented. The first concern was to use LI and FB rest APIs which required to be subscribed. Once the subcription is approved (it may take some time), an application token is generated. In LinkedIn case is even worse. LI sends notification to a person saying that some search was perfomed. After understanding it the direction was changed. In POIROT Google Dorks queries used. It was kind of breakthrough, it gives anonymity. However, google itself does not allow to make searches without to be authorized. Doing brute force on trying each search engine that accepts \"Google Dorks\" and allows anonymity leads to DuckDuckGo. But DDG after number of requests puts a captcha. To overcome this problem, VPN is used. When DDG tries to ban a request, the VPN changes the IP/location. When all such challenges were solved, the POIROT implemented, expending REST API for making requests about Person of Interest, performs searches on both LI and FB social networks, then for each found result, makes direct connection to the web page, then parses it. Extracted information mapped to data object model which at the end saved into database repository. POIROT uses a document database, because the basic response from the social network is json. In addition a response can be changed. And if some scale is required, to scale a document database is easier than relational one. However, there are differences in gathering information from LinkedIn and Facebook. Facebook tries to make if difficult to scrap web page. To handle this problem, POIROT uses additional microservice based on python library called facebook-page-info-scraper . Discussion Conclusion Part C References Carlos Fragoso (June, 2023) How to Conduct Person of Interest Investigations Using OSINT and Maltego https://www.maltego.com/blog/how-to-conduct-person-of-interest-investigations-using-osint-and-maltego/ Yuval Harari (Oct. 2024) Nexus https://files.catbox.moe/hedipq.pdf Yiadh TLIJANI (April, 2024) 8 Deployment Strategies Explained and Compared https://devopsbootcamp.org/8-deployment-strategies-explained-and-compared/ David Oragui. (2023, April 26). Software documentation best practices [with examples]. Helpjuice. https://helpjuice.com/blog/software-documentation Martin, M. (2023, April 8). Software configuration management in software engineering. Guru99. https://www.guru99.com/software-configuration-management-tutorial.html Sara Nguyen (Sep 20, 2023). A guide to understanding configuration management. https://blog.logrocket.com/product-management/configuration-management-guide/ Alghamdi, J., Luo, S. & Lin, Y. A comprehensive survey on machine learning approaches for fake news detection. Multimed Tools Appl 83, 51009\u201351067 (2024). https://doi.org/10.1007/s11042-023-17470-8 Will Hillier (AUGUST 13, 2021) What Is Web Scraping? A Complete Beginner\u2019s Guide https://careerfoundry.com/en/blog/data-analytics/web-scraping-guide/ Jamie (January 20, 2023) Beginner\u2019s Guide to Hidden Data with Google Dorking https://dorksearch.com/blog/beginners-guide-google-dorking/ Alex Williams (May 13, 2021) What is a Document Database? https://phoenixnap.com/kb/document-database Spring.io https://docs.spring.io/spring-data/mongodb/reference/repositories/core-concepts.html sp0T wael-sudo2 Free Facebook pages MetaData Scraping Library - Unlimited Calls https://github.com/wael-sudo2/facebook-page-info-scraper Azure DevOps Microservices architecture design https://learn.microsoft.com/en-us/azure/architecture/microservices/ Docker documentation Get Started https://docs.docker.com/desktop/ DuploCloud (December 4 2023) Docker Advantages and Disadvantages: What You Need to Know Before You Switch https://duplocloud.com/blog/docker-advantages-and-disadvantages/ Appendices Acknowledge To my esteemed supervisor, Dr. Shuchi Dhir for her guidance and technical contributions, a heart of gratitude. She has already been a great mentor in addition to a supervisor. To University of People for giving me a chance to aquire a Master Degree in Information Technology providing valuable courses and highly professional and knowledgeable lectures. List of Abriviations POI Person Of Interest VPN Virtual Private Network OSINT Open Source Intelligence API Application Programmable Interface DMO Domain Model Object Problem Statement Literature Review","title":"Capstone Repost"},{"location":"capstone_report/#part-a","text":"Title Page Abstract","title":"Part A"},{"location":"capstone_report/#table-of-contents","text":"Introduction Literature Review Methodology Results Discussion Conclusion References Appendices","title":"Table of contents"},{"location":"capstone_report/#introduction","text":"","title":"Introduction"},{"location":"capstone_report/#background","text":"Back to 2022, Russia treacherously invaded to Ukraine. Part of my family lives there. I was shocked, could not believe. From the first minutes I started to read news from the available source. The news came in contradiction, one news said something, another one the opposite. After a week of such reading, it became clear to me, that part of the news is fake, spread misinformation, present untrue facts. Only \"gut feelings\" helps me somehow divide the wheat from the chaff. I realized that the current state of matter does not exist. I simply wanted to get news and check if it is true or not.","title":"Background"},{"location":"capstone_report/#problem-statement","text":"Alghamdi (2023) explains: \"The proliferation of fake news on social media platforms poses significant challenges to society and individuals, leading to negative impacts. As the tactics employed by purveyors of fake news continue to evolve, there is an urgent need for automatic fake news detection (FND) to mitigate its adverse social consequences.\" Machine Learning and Artificial Intelligence helps to fight back, in detecting fake news. They heavily depend on data. However, all these methods analyzing text, using NLP or other available methods. Some of such methods are pretty good. Such approaches have drawbacks. They require having a lot of data, they require to be a data science to prepare data, to shape it. In addition, this data is historical data. In the rise of chatGPT, creating a fake news it matters of seconds. News by nature changing. To keep up with changes is a tremendous task and always it suceeds. What if we gather information about person who spreads the news? It should be quicker and simplier. Two most popular social networks may contain information related to the person of interest like location, profession, group(s), followers, phone and email, account date creation. Some researches show that a public person is more likely not to spread fake information than a regular person. Knowing who is the person gives us a clue can this person spread a fake news or not, with probability between 0 and 1. It also could help to categorize a person if it is a human, bot, cyborg or troll. Existing tools are cost money, often outdated or/and difficult to use. The following questions should be answered and pragmatic steps to be implemented. How does information related to POI look? Is the information about POI the same on LinkedIn and Facebook? Is gathering information legal? Is it ethical? What are existing methods? Web scrappping, how to extract data? When search engine blocks the request, what can be done? When Facebook sends http 999 error code, what does it mean? What information helps to build a model? What database to choose? How to store data? How to retrieve data? How to analyze data? How to visualize data?","title":"Problem statement"},{"location":"capstone_report/#literature-review","text":"To formulate the theory and resolve the research issues, a detailed literature review was executed. Access to journals and IEEE transactions was made possible via the servers of the University of People. This section represents the litrerature in the field of full text search, machine learning, and data gathering. The research focuses on finding a person of interest using publicly available sources, especially those which are on social networks, like linkedIn and facebook. Most of the literature found on GS/IEEE concentrating their efforts on gathering information using cameras, mobile phones or other gadgets. There are not available trusted articles that could have been used to this research. In addition, because Facebook changes their policies too often, any research older than one year ago becomes unrelevant. Frogoso (2023) writes: \"As many aspects of our lives depend on or exist only on the internet, we might be sharing information and details of our personal identities and private life without knowing.\" To perform a searching of POI we have to start looking for official information related to our \"target\" it may be a location, phone number or email. LinkedIn is a valuable source of information which can give us a profession, location, connections and groups a person is following. The date of creation of the account, number of follwers and groups can differentiate a real person from the fake one. Having an email, adds the ability to check if this mail was pawned or not. Location used as a filter to minimize the number of POIs.","title":"Literature Review"},{"location":"capstone_report/#web-scrapping","text":"Hillier (2021) defines a web scraping as: \"Web scraping (or data scraping) is a technique used to collect content and data from the internet. This data is usually saved in a local file so that it can be manipulated and analyzed as needed. Common data types organizations collect include images, videos, text, product information, customer sentiments and reviews (on sites like Twitter, Yell, or Tripadvisor), and pricing from comparison websites.\" Our use case of web scrapping is gathering information related to person of interest from search engine results.","title":"Web Scrapping"},{"location":"capstone_report/#google-dorks","text":"Jamie (2023) explains: \"Google Dorking, also known as Google Hacking, is a technique used to find sensitive information or confidential data on the Internet by using advanced operators in Google search queries. These special operators make it possible to search for specific types of files or information. These files or information may be login pages, unsecured databases, and sensitive documents. This technique is helpful for many purposes, such as personal research, job applications, or even cybersecurity and penetration testing.\" In our case: site:linkedin.com \"Jon Snow\" site:facebook.com \"Jon Snow\"","title":"Google Dorks"},{"location":"capstone_report/#document-database","text":"\"A document database is a type of NoSQL database which stores data as JSON documents instead of columns and rows. JSON is a native language used to both store and query data. These documents can be grouped together into collections to form database systems. Using JSON enables app developers to store and query data in the same document-model format that they use to organize their app\u2019s code. The object model can be converted into other formats, such as JSON, BSON and XML.\" (Williams, 2021). Facebook Data Model LinkedIn Data Model","title":"Document database"},{"location":"capstone_report/#mongodb-spring-repository","text":"\"The central interface in the Spring Data repository abstraction is Repository. It takes the domain class to manage as well as the identifier type of the domain class as type arguments. This interface acts primarily as a marker interface to capture the types to work with and to help you to discover interfaces that extend this one.\" (Spring.io, 2024) For Facebook data For LinkedIn data CrudRepository interface defines basic database operations: Create, Read, Update and Delete. Create operation saves entity into repository. Read operation finds one entity in the db and returns it. Search key may be id Update operation finds one entity, updates required fields and saves again. Delete operation finds the entity and if it exists, deletes from the repository.","title":"MongoDB Spring Repository"},{"location":"capstone_report/#facebook-page-scraper","text":"The author of this library sP0t writes: \"facebook-page-info-scraper is a Python package that provides a convenient way to crawl information from Facebook pages. With this package, you can scrape Facebook data with unlimited calls. Whether you're a researcher, a data enthusiast, or a developer working on Facebook-related projects, this library simplifies the data extraction process. It uses Selenium for web scraping and retrieves Facebook page details such as the page name, category, address, email, follower count, and more.\"","title":"Facebook Page Scraper"},{"location":"capstone_report/#microservice-architecture","text":"Azure DevOps (2022) explains: \"Microservices are a popular architectural style for building applications that are resilient, highly scalable, independently deployable, and able to evolve quickly.\" Benefits: Agility \u2014 \"Because microservices are deployed independently, it's easier to manage bug fixes and feature releases.\" (Azure DevOps 2022) Small, focused teams - \"A microservice should be small enough that a single feature team can build, test, and deploy it. Small team sizes promote greater agility.\" (Azure DevOps 2022) Small code base - \"In a monolithic application, there is a tendency over time for code dependencies to become tangled. Adding a new feature requires touching code in a lot of places.\" (Azure DevOps 2022) Mix of technologies - \"Teams can pick the technology that best fits their service, using a mix of technology stacks as appropriate.\" (Azure DevOps 2022) Fault isolation - \"If an individual microservice becomes unavailable, it won't disrupt the entire application, as long as any upstream microservices are designed to handle faults correctly.\" (Azure DevOps 2022) Scalability - \"Services can be scaled independently, letting you scale out subsystems that require more resources, without scaling out the entire application. Using an orchestrator such as Kubernetes, you can pack a higher density of services onto a single host, which allows for more efficient utilization of resources\" (Azure DevOps 2022) Data isolation - It is much easier to perform schema updates, because only a single microservice is affected. (Azure DevOps 2022). Poirot is built on this principle. It has the following microservices: Poirot itself, rest API, controllers, scrapers and databse template. Facebook page Scrapper - a server which listens to upcoming requests and scraps FB pages. MongoDB a document database runs as independent microservice. If needed, there is ability to scale up any of those services.","title":"Microservice Architecture"},{"location":"capstone_report/#docker","text":"As mentioned in Docker documentation: \"Docker is an open platform for developing, shipping, and running applications. Docker enables you to separate your applications from your infrastructure so you can deliver software quickly. With Docker, you can manage your infrastructure in the same ways you manage your applications. By taking advantage of Docker's methodologies for shipping, testing, and deploying code, you can significantly reduce the delay between writing code and running it in production.\" In Poirot we use Docker because of: DuploCloud (2023) put it this way:","title":"Docker"},{"location":"capstone_report/#part-b","text":"","title":"Part B"},{"location":"capstone_report/#methodology","text":"The implemented system Poirot is an intelligent system that assists to gather information about POI. It aggregates available information on two social networks: LinkedIn and Facebook using open sources, information that are public and available for everyone. The purpose was to create a working system which will deal with hiding information about researcherss, to gather information on the internet, to parse such unstructured information, to build a model and save into reliable storage for the future use and analysis. To successfully tackle the defined objectives and sub-objectives, this research project undertakes a thorough exploration of important research questions. These inquiries are central to devising a feasible solution. This section provides an overview of how this research project was conducted, highlighting the steps taken throughout the process. A detailed flow diagram illustrating the main activities is presented in Figure 1. The methodology outlines the intricate research steps represented in a flow chart, which were implemented to realize the research plan. It accentuates the systematic approach necessary to achieve the aims of this thesis and the important stages of the research initiative. Initially, the idea was created by doing research of OSINT tools and methods of gathering information on person of interest. The bigger idea was and still is to find efficient methods and approaches to fignt with disinformation, misinformation and spread of fake news. Knowing a person, knowing his presence on social networks, bounding to particular groups, especially on Facebook gives as clues if this person could spread fake news intentionally, if it is a fake account, or it is kind of bot, cyborg or troll. Once the scope of the problem was identified, stakeholders were contacted, informed. The next step was revewing existing literature. With the help of Google Scholars, research questions were shaped and developed. Then, choosing the right approach of searching data has beed examined. Available options were: to use FB & LI APIs or find different methods. Having digged into their APIs became clear that part of the major requirements could not meet. Then another idea was taken into account. What of to use Google Dorks queries to bring search resuls? It worked as a charm, the only problem was - Google required to be logged in. However, DuckDuckGo provided the same functionalit anonymously. Literature review starts with understanding gathering methods using open sources, like the internet. It was concentrated on the available tools, techniques and algorithms. The procedure illustrates the comprehensive research steps presented in a flow chart format, executed to fulfill the research plan. It emphasizes the sequential approach taken to reach the objectives of this thesis, as well as the significant phases of the research project. Furthemore, literature review continues to subjects of machine learning, finding appropriate learning algorithms, building training data and validation. Because of time constraints, this part is apart from the project.","title":"Methodology"},{"location":"capstone_report/#results","text":"After trials and errors the POIROT system was designed and implemented. The first concern was to use LI and FB rest APIs which required to be subscribed. Once the subcription is approved (it may take some time), an application token is generated. In LinkedIn case is even worse. LI sends notification to a person saying that some search was perfomed. After understanding it the direction was changed. In POIROT Google Dorks queries used. It was kind of breakthrough, it gives anonymity. However, google itself does not allow to make searches without to be authorized. Doing brute force on trying each search engine that accepts \"Google Dorks\" and allows anonymity leads to DuckDuckGo. But DDG after number of requests puts a captcha. To overcome this problem, VPN is used. When DDG tries to ban a request, the VPN changes the IP/location. When all such challenges were solved, the POIROT implemented, expending REST API for making requests about Person of Interest, performs searches on both LI and FB social networks, then for each found result, makes direct connection to the web page, then parses it. Extracted information mapped to data object model which at the end saved into database repository. POIROT uses a document database, because the basic response from the social network is json. In addition a response can be changed. And if some scale is required, to scale a document database is easier than relational one. However, there are differences in gathering information from LinkedIn and Facebook. Facebook tries to make if difficult to scrap web page. To handle this problem, POIROT uses additional microservice based on python library called facebook-page-info-scraper .","title":"Results"},{"location":"capstone_report/#discussion","text":"","title":"Discussion"},{"location":"capstone_report/#conclusion","text":"","title":"Conclusion"},{"location":"capstone_report/#part-c","text":"","title":"Part C"},{"location":"capstone_report/#references","text":"Carlos Fragoso (June, 2023) How to Conduct Person of Interest Investigations Using OSINT and Maltego https://www.maltego.com/blog/how-to-conduct-person-of-interest-investigations-using-osint-and-maltego/ Yuval Harari (Oct. 2024) Nexus https://files.catbox.moe/hedipq.pdf Yiadh TLIJANI (April, 2024) 8 Deployment Strategies Explained and Compared https://devopsbootcamp.org/8-deployment-strategies-explained-and-compared/ David Oragui. (2023, April 26). Software documentation best practices [with examples]. Helpjuice. https://helpjuice.com/blog/software-documentation Martin, M. (2023, April 8). Software configuration management in software engineering. Guru99. https://www.guru99.com/software-configuration-management-tutorial.html Sara Nguyen (Sep 20, 2023). A guide to understanding configuration management. https://blog.logrocket.com/product-management/configuration-management-guide/ Alghamdi, J., Luo, S. & Lin, Y. A comprehensive survey on machine learning approaches for fake news detection. Multimed Tools Appl 83, 51009\u201351067 (2024). https://doi.org/10.1007/s11042-023-17470-8 Will Hillier (AUGUST 13, 2021) What Is Web Scraping? A Complete Beginner\u2019s Guide https://careerfoundry.com/en/blog/data-analytics/web-scraping-guide/ Jamie (January 20, 2023) Beginner\u2019s Guide to Hidden Data with Google Dorking https://dorksearch.com/blog/beginners-guide-google-dorking/ Alex Williams (May 13, 2021) What is a Document Database? https://phoenixnap.com/kb/document-database Spring.io https://docs.spring.io/spring-data/mongodb/reference/repositories/core-concepts.html sp0T wael-sudo2 Free Facebook pages MetaData Scraping Library - Unlimited Calls https://github.com/wael-sudo2/facebook-page-info-scraper Azure DevOps Microservices architecture design https://learn.microsoft.com/en-us/azure/architecture/microservices/ Docker documentation Get Started https://docs.docker.com/desktop/ DuploCloud (December 4 2023) Docker Advantages and Disadvantages: What You Need to Know Before You Switch https://duplocloud.com/blog/docker-advantages-and-disadvantages/","title":"References"},{"location":"capstone_report/#appendices","text":"","title":"Appendices"},{"location":"capstone_report/#acknowledge","text":"To my esteemed supervisor, Dr. Shuchi Dhir for her guidance and technical contributions, a heart of gratitude. She has already been a great mentor in addition to a supervisor. To University of People for giving me a chance to aquire a Master Degree in Information Technology providing valuable courses and highly professional and knowledgeable lectures.","title":"Acknowledge"},{"location":"capstone_report/#list-of-abriviations","text":"POI Person Of Interest VPN Virtual Private Network OSINT Open Source Intelligence API Application Programmable Interface DMO Domain Model Object","title":"List of Abriviations"},{"location":"capstone_report/#problem-statement_1","text":"","title":"Problem Statement"},{"location":"capstone_report/#literature-review_1","text":"","title":"Literature Review"},{"location":"problem_statement/","text":"Problem Statement Recently, the world witnessed a new technical revolution, the rise of AI. The capabilities of AI are enormous from context creation to person\u2019s voice imitation. For a regular person to understand what is true and what is generated is not possible. Russian hackers influenced the US presidential election in 2016. They generated fake social accounts and spread fake news to change the reality. Today it is much, much more difficult to answer if something is fake or not. One of the steps in fighting fake news, disinformation is to check who is sharing the news or spreading it over the social network. OSINT is the way to go. The problem with it is - over the years it became outdated. The Intention of my research is to find out a way to gather information based on a person's social profile. Furthermore, Free OSINT and Online Research Resources help to find available tools. It showed 18 resources, none of them relevant to gathering information about a person. These tools are developed by different people with different intentions. Using them without checking creates a security risk and loss of trust. Using open source OSINT tools containing at least two problems. Claburn (2024) explains: \u201cThe majority of open source project maintainers are not being paid for their work, spend three times as much time on security than they did three years ago, and have become less trusting of contributors following the xz backdoor. Small wonder then that the maintainer population is aging \u2013 not enough newcomers want the undercompensated, unappreciated job.\u201d The second problem as Revel (2016) suggests is Proposed solution Using LinkedIn and Facebook REST API we are going to gather information related to social footprint of the person of interest. This information is saved into a database for further analysis. Input: an user will provide the following: First Name, Last Name, Location, email and phone. Required parameters first name and last name. The rest are optional. A microservice gets this request and simultaneously sends requests to LinkedIn and Facebook. When user\u2019s request finishes, notification will be sent by email. There are two rest controllers, one related to the scraping data from LI and the second one, from FB. Gathered information saved into a database for further usage. In both cases, LI and FB are required to be registered in order to use their APIs, which do not fit our requirement to be in shadow. Thus, we will use search engine like DDG and web scrapping techniques.","title":"Problem Statement"},{"location":"problem_statement/#problem-statement","text":"Recently, the world witnessed a new technical revolution, the rise of AI. The capabilities of AI are enormous from context creation to person\u2019s voice imitation. For a regular person to understand what is true and what is generated is not possible. Russian hackers influenced the US presidential election in 2016. They generated fake social accounts and spread fake news to change the reality. Today it is much, much more difficult to answer if something is fake or not. One of the steps in fighting fake news, disinformation is to check who is sharing the news or spreading it over the social network. OSINT is the way to go. The problem with it is - over the years it became outdated. The Intention of my research is to find out a way to gather information based on a person's social profile. Furthermore, Free OSINT and Online Research Resources help to find available tools. It showed 18 resources, none of them relevant to gathering information about a person. These tools are developed by different people with different intentions. Using them without checking creates a security risk and loss of trust. Using open source OSINT tools containing at least two problems. Claburn (2024) explains: \u201cThe majority of open source project maintainers are not being paid for their work, spend three times as much time on security than they did three years ago, and have become less trusting of contributors following the xz backdoor. Small wonder then that the maintainer population is aging \u2013 not enough newcomers want the undercompensated, unappreciated job.\u201d The second problem as Revel (2016) suggests is","title":"Problem Statement"},{"location":"problem_statement/#proposed-solution","text":"Using LinkedIn and Facebook REST API we are going to gather information related to social footprint of the person of interest. This information is saved into a database for further analysis. Input: an user will provide the following: First Name, Last Name, Location, email and phone. Required parameters first name and last name. The rest are optional. A microservice gets this request and simultaneously sends requests to LinkedIn and Facebook. When user\u2019s request finishes, notification will be sent by email. There are two rest controllers, one related to the scraping data from LI and the second one, from FB. Gathered information saved into a database for further usage. In both cases, LI and FB are required to be registered in order to use their APIs, which do not fit our requirement to be in shadow. Thus, we will use search engine like DDG and web scrapping techniques.","title":"Proposed solution"}]}