{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Poirot documentation Welcome to Poirot documentation site. In upcoming pages you will see: A problem statement and project description Software design document Testing and security document Software deployment and maintanance document To navigate in the site, use next or prev buttons.","title":"Home"},{"location":"#poirot-documentation","text":"Welcome to Poirot documentation site. In upcoming pages you will see: A problem statement and project description Software design document Testing and security document Software deployment and maintanance document To navigate in the site, use next or prev buttons.","title":"Poirot documentation"},{"location":"HELP/","text":"Getting Started Reference Documentation For further reference, please consider the following sections: Official Gradle documentation Spring Boot Gradle Plugin Reference Guide Create an OCI image Spring Data MongoDB Useful commands docker-compose up -d Show available java versions /usr/libexec/java_home -V Be sure that Docker Desktop is up and running together with docker Swagger run me Guides The following guides illustrate how to use some features concretely: Accessing Data with MongoDB Additional Links These additional references should also help you: Gradle Build Scans \u2013 insights for your project's build { \"@context\":\"http://schema.org\", \"@graph\":[ { \"@type\":\"Person\", \"address\":{ \"@type\":\"PostalAddress\", \"addressLocality\":\"Denver, Colorado, United States\", \"addressCountry\":\"US\" }, \"alumniOf\":[ { \"@type\":\"EducationalOrganization\", \"name\":\"Texas A&M University\", \"url\":\"https://www.linkedin.com/school/texas-a&m-university/\", \"member\":{ \"@type\":\"OrganizationRole\", \"startDate\":1993, \"endDate\":1998 } } ], \"awards\":[ \"Chief Data Officer Magazine - Leading Data Consultants\", \"Epicor Innovation Award\" ], \"image\":{ \"@type\":\"ImageObject\", \"contentUrl\":\"https://media.licdn.com/dms/image/v2/D5603AQGNj73gyg8EyQ/profile-displayphoto-shrink_200_200/profile-displayphoto-shrink_200_200/0/1693333951210?e=2147483647&v=beta&t=g02i2msMkmv6m0YwhWaGmwyCtKUGx8cDnlo9GDlsKkI\" }, \"jobTitlename\":\"Jon Snow\", \"sameAs\":\"https://www.linkedin.com/in/jonwsnow\", \"url\":\"https://www.linkedin.com/in/jonwsnow\", \"memberOf\":[ ], \"worksFor\":[ { \"@type\":\"Organization\", \"name\":\"Icertis\", \"url\":\"https://www.linkedin.com/company/icertis\", \"location\":\"Denver, Colorado, United States\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"\u2022 *** ******** ******* ******** *** ********** *** ********* ********* ** *** ********.\\u003C**\\u003E\u2022 ********* ******** ** ******** ******** ***** *** ****** ******** ************* *** ******** ********* *******.\\u003C**\\u003E\u2022 ******** *********** ******* ****** *** ******** ************ ******* ********* ******** ******* ***********.\" } }, { \"@type\":\"Organization\", \"name\":\"*******\", \"location\":\"Denver, Colorado, United States\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"\u2022 *********** *** ************* ** *** ******** ******* ************ ** *******, ******* ******** ******** *** ***** *********** *** ****** *********.\\u003C**\\u003E\u2022 ************ **** *****-********** ***** ** ****** *********** ******** ********** *** ******* ******.\\u003C**\\u003E\u2022 *********** ********** ** ******* *******' ***** ****** ********** *** ******* ***********.\" } }, { \"@type\":\"Organization\", \"name\":\"****\", \"location\":\"Denver, Colorado, United States\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"******* ******** ******* *** ******* ***** ** *** ********.\\u003C**\\u003E******* ******** ******** **** * ***** ** **** ** ***** *********, ******* ********** *********' ****** ** **********.\" } }, { \"@type\":\"Organization\", \"name\":\"***** *\", \"location\":\"Denver, CO\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"\u2022\\t******* *** ************ ******** *** ******** ******* ***** *** *** ****-**** *********\\u003C**\\u003E\u2022\\t********* ******* **** ********** ********** ********** ****\\u003C**\\u003E\u2022\\t******* ** ******* ********** ******* ******** *** ********* ************ ** *************** ** ******* ******** ************ \\u003C**\\u003E\u2022\\t******* *** ***** * *** ******** ***** *******\\u003C**\\u003E\\u003C**\\u003E*************:\\u003C**\\u003E\u2022\\t*** ******** ***** **-***** *********** **** -** ** +**.\\u003C**\\u003E\u2022\\t**% ******* *********** ** *****-****** **** *********** *&*.\\u003C**\\u003E\u2022\\t**% ****** *********** ** *****-****** **** *********** *&*.\\u003C**\\u003E\u2022\\t**.*% ****** ********* ******* ********* **** (******** *******).\" } }, { \"@type\":\"Organization\", \"name\":\"***** *\", \"location\":\"Denver, CO\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"\u2022\\t******* ******** *** ******* ****** ***** *** ******* **** **********, *********: **************, *******, ******* **********, ******** *******, *** *********.\\u003C**\\u003E\u2022\\t******* ******** ********* *** ******** *** ********* ** ***** ******** ******** ********.\\u003C**\\u003E\u2022\\t***** ********* *** ******** ******* ********** ****** *** ***** * ******** *** *********.\\u003C**\\u003E\\u003C**\\u003E*************:\\u003C**\\u003E\u2022\\t***** * **** ** *****, ******** *********** ********.\\u003C**\\u003E\u2022\\t******* ***** ** *% ****** ***** **** (******** *******).\" } }, { \"@type\":\"Organization\", \"name\":\"****** ********\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"\u2022\\t******* ******* *** * ********* ********** ********** ** ***** *,***+ ****** ****** ********* ** *** ****** ****** ******* *** **** ***.\\u003C**\\u003E\u2022\\t*********** ****** *** *********** ** ********* ***** ** ****** ******** ****** ** **%, ********** ********* ** ***** ***** ************.\\u003C**\\u003E\u2022\\t************ ** ******** ******** & ********** ****, **** ** ********* ***** ** ********* *** ******* ********** ****** ******** *****. ********** ********** *** ******* ** ***** ********** ***********, ********* ** * *** ******** ***** ******** ** ** ******.\" } }, { \"@type\":\"Organization\", \"name\":\"****** ********\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"*********** *** *** ********, **************, *** ****************** ** * ******** ******* ******** ********. ******** ****** ********* ** ************ ******** (**) ******** ** ******** ****** ** *** ********\u2019* **** ********* ******** ******** ************. \\u003C**\\u003E******** **************** *******:\\u003C**\\u003E\u2022\\t***** ** *****, ************* ***+ ********* *** $*** ** *******\\u003C**\\u003E\u2022\\t******* *** *********** ******* **** ******** ********** **** ** ******* ** * **** ****.\\u003C**\\u003E\u2022\\t******* *** ******* ********** ******, ******** ********** ******, *** ******** ********** ******** *****\\u003C**\\u003E\u2022\\t******* ** ** ******** *********** ******** *** **** ** ******* ** ** ************** *** ****** ***********, ********* *******/******** ************ **********\\u003C**\\u003E\u2022\\t***/******** *** ******* ******* ********** \\u003C**\\u003E\\u003C**\\u003E*************:\\u003C**\\u003E\u2022\\t******** ******* ******* ****** ** *% *** ******** ******* ****** ** *%.\\u003C**\\u003E\u2022\\t******* ********** ******: ********* *** ******** ************** ************* ** ******* ******* *********, ******* ********* ******** ************.\" } }, { \"@type\":\"Organization\", \"name\":\"****** ********, ******** ******** *********\", \"location\":\"Denver, CO\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"*************:\\u003C**\\u003E\u2022\\t******** ******* ******* ** **% **** **** ****, **** *** ******** **** **% ** *** ****** ****, *** **% ****** ** *** ***** ****.\\u003C**\\u003E\u2022\\t************ ******* &**;$*** ** ******** ******** *** ********** &**;$*** ** ****** *******.\\u003C**\\u003E\u2022\\t************ ******** **** ***** ******** ************ *** *********** ********* *********.\" } }, { \"@type\":\"Organization\", \"name\":\"****** ******** ****\", \"member\":{ \"@type\":\"OrganizationRole\" } }, { \"@type\":\"Organization\", \"name\":\"******** *********, ******** ******* **\", \"member\":{ \"@type\":\"OrganizationRole\" } }, { \"@type\":\"Organization\", \"name\":\"******** *********\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"******* **** ** ******* ******** ************ *** ******** ******* ** ********* ******** *** ********'* ********* ************ *****\\u003C**\\u003E*************:\\u003C**\\u003E\u2022\\t****** *** ** *** *********** ** ******** *****, *****, ******** ************, ****** *******, *** ***** ******* ******** *** ** *********** ******* ** ******* *******. ******** ******* ****** ***** *******.\" } }, { \"@type\":\"Organization\", \"name\":\"******** *********\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"*********** **** *** **** *** ** ********* **** * ********** ***** ****** ** ******** *****, ******* ****** ******* *** ********* ***.\" } }, { \"@type\":\"Organization\", \"name\":\"****** ***********\", \"location\":\"Denver, CO\", \"member\":{ \"@type\":\"OrganizationRole\" } } ], \"knowsLanguage\":[ ], \"disambiguatingDescription\":\"\", \"interactionStatistic\":{ \"@type\":\"InteractionCounter\", \"interactionType\":\"https://schema.org/FollowAction\", \"name\":\"Follows\", \"userInteractionCount\":3530 }, \"description\":\"Highly motivated and driven to personally succeed through coaching and assisting\u2026\" }, { \"@type\":\"WebPage\", \"url\":\"https://www.linkedin.com/in/jonwsnow\", \"reviewedBy\":{ \"@type\":\"Person\", \"name\":\"Jon Snow\" } } ] } { \"page_name\":\"Paul Kirby: Member for Port Darwin\", \"page_category\":\"Politiker/in\", \"email\":\"electorate.portdarwin@nt.gov.au\", \"page_website\":[ \"http://www.territorylabor.com.au\", \"https://parliament.nt.gov.au/members/by-name/paul-kirby\" ], \"social_media_links\":[ \"https://www.instagram.com/kirbyportdarwin\", \"https://linkedin.com/in\" ], \"phone_number\":\"None\", \"location\":\"http://www.territorylabor.com.au/\", \"page_rate\":\"None\", \"page_review_number\":\"None\", \"page_likes\":\"None\", \"page_followers\":\"3.861 Follower\", \"following\":\"1,065 followed\" } Facebook List of Persons [ { \"id\": \"970ba0e4-105a-416d-a998-df846e0b9858\", \"firstName\": \"Anthony\", \"lastName\": \"Zurcher\", \"email\": \"haveyoursay@bbc.co.uk\", \"phone\": null, \"profession\": \"Media/news company\", \"personalWebPageURL\": \"http://www.bbc.co.uk/news\", \"followers\": 48, \"following\": 0, \"location\": \"BBC Broadcasting House, London, United Kingdom, W1A 1AA\" }, { \"id\": \"845d587c-8c5a-409b-9db1-ed1e9c51916b\", \"firstName\": \"Anthony\", \"lastName\": \"Zurcher\", \"email\": \"newsroomznbc@gmail.com\", \"phone\": null, \"profession\": \"Interest\", \"personalWebPageURL\": \"https://znbc.co.zm\", \"followers\": 982000, \"following\": 0, \"location\": \"ZNBC, P.O Box 50015, Mass Media Complex, Alick Nkata Road, Lusaka., 10101\" }, { \"id\": \"48e7a87d-171b-47bf-853e-94ca5443483d\", \"firstName\": \"Anthony\", \"lastName\": \"Zurcher\", \"email\": \"info@creators.com\", \"phone\": \"+1 310-337-7003\", \"profession\": \"Arts & entertainment\", \"personalWebPageURL\": \"http://www.Creators.com\", \"followers\": 2000, \"following\": 0, \"location\": \"+1 310-337-7003\" } ] curl example curl -X POST http://localhost:5001 -d \"{\\\"link\\\":\\\"https://www.facebook.com/mr.pallab.ghosh/\\\"}\" -H \"Content-Type: application/json\" ``` #### How to run python Create venv - virtual environment ```bash python3 -m venv fb_scapper_venv Activate created venv source fb_scapper_venv/bin/activate Install all fb_scrapper dependencies pip install -r requirements.txt And finally, run a script python3 -m fb_page_scrapper","title":"Help"},{"location":"HELP/#getting-started","text":"","title":"Getting Started"},{"location":"HELP/#reference-documentation","text":"For further reference, please consider the following sections: Official Gradle documentation Spring Boot Gradle Plugin Reference Guide Create an OCI image Spring Data MongoDB","title":"Reference Documentation"},{"location":"HELP/#useful-commands","text":"docker-compose up -d Show available java versions /usr/libexec/java_home -V","title":"Useful commands"},{"location":"HELP/#_1","text":"Be sure that Docker Desktop is up and running together with docker","title":""},{"location":"HELP/#swagger","text":"run me","title":"Swagger"},{"location":"HELP/#guides","text":"The following guides illustrate how to use some features concretely: Accessing Data with MongoDB","title":"Guides"},{"location":"HELP/#additional-links","text":"These additional references should also help you: Gradle Build Scans \u2013 insights for your project's build { \"@context\":\"http://schema.org\", \"@graph\":[ { \"@type\":\"Person\", \"address\":{ \"@type\":\"PostalAddress\", \"addressLocality\":\"Denver, Colorado, United States\", \"addressCountry\":\"US\" }, \"alumniOf\":[ { \"@type\":\"EducationalOrganization\", \"name\":\"Texas A&M University\", \"url\":\"https://www.linkedin.com/school/texas-a&m-university/\", \"member\":{ \"@type\":\"OrganizationRole\", \"startDate\":1993, \"endDate\":1998 } } ], \"awards\":[ \"Chief Data Officer Magazine - Leading Data Consultants\", \"Epicor Innovation Award\" ], \"image\":{ \"@type\":\"ImageObject\", \"contentUrl\":\"https://media.licdn.com/dms/image/v2/D5603AQGNj73gyg8EyQ/profile-displayphoto-shrink_200_200/profile-displayphoto-shrink_200_200/0/1693333951210?e=2147483647&v=beta&t=g02i2msMkmv6m0YwhWaGmwyCtKUGx8cDnlo9GDlsKkI\" }, \"jobTitlename\":\"Jon Snow\", \"sameAs\":\"https://www.linkedin.com/in/jonwsnow\", \"url\":\"https://www.linkedin.com/in/jonwsnow\", \"memberOf\":[ ], \"worksFor\":[ { \"@type\":\"Organization\", \"name\":\"Icertis\", \"url\":\"https://www.linkedin.com/company/icertis\", \"location\":\"Denver, Colorado, United States\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"\u2022 *** ******** ******* ******** *** ********** *** ********* ********* ** *** ********.\\u003C**\\u003E\u2022 ********* ******** ** ******** ******** ***** *** ****** ******** ************* *** ******** ********* *******.\\u003C**\\u003E\u2022 ******** *********** ******* ****** *** ******** ************ ******* ********* ******** ******* ***********.\" } }, { \"@type\":\"Organization\", \"name\":\"*******\", \"location\":\"Denver, Colorado, United States\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"\u2022 *********** *** ************* ** *** ******** ******* ************ ** *******, ******* ******** ******** *** ***** *********** *** ****** *********.\\u003C**\\u003E\u2022 ************ **** *****-********** ***** ** ****** *********** ******** ********** *** ******* ******.\\u003C**\\u003E\u2022 *********** ********** ** ******* *******' ***** ****** ********** *** ******* ***********.\" } }, { \"@type\":\"Organization\", \"name\":\"****\", \"location\":\"Denver, Colorado, United States\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"******* ******** ******* *** ******* ***** ** *** ********.\\u003C**\\u003E******* ******** ******** **** * ***** ** **** ** ***** *********, ******* ********** *********' ****** ** **********.\" } }, { \"@type\":\"Organization\", \"name\":\"***** *\", \"location\":\"Denver, CO\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"\u2022\\t******* *** ************ ******** *** ******** ******* ***** *** *** ****-**** *********\\u003C**\\u003E\u2022\\t********* ******* **** ********** ********** ********** ****\\u003C**\\u003E\u2022\\t******* ** ******* ********** ******* ******** *** ********* ************ ** *************** ** ******* ******** ************ \\u003C**\\u003E\u2022\\t******* *** ***** * *** ******** ***** *******\\u003C**\\u003E\\u003C**\\u003E*************:\\u003C**\\u003E\u2022\\t*** ******** ***** **-***** *********** **** -** ** +**.\\u003C**\\u003E\u2022\\t**% ******* *********** ** *****-****** **** *********** *&*.\\u003C**\\u003E\u2022\\t**% ****** *********** ** *****-****** **** *********** *&*.\\u003C**\\u003E\u2022\\t**.*% ****** ********* ******* ********* **** (******** *******).\" } }, { \"@type\":\"Organization\", \"name\":\"***** *\", \"location\":\"Denver, CO\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"\u2022\\t******* ******** *** ******* ****** ***** *** ******* **** **********, *********: **************, *******, ******* **********, ******** *******, *** *********.\\u003C**\\u003E\u2022\\t******* ******** ********* *** ******** *** ********* ** ***** ******** ******** ********.\\u003C**\\u003E\u2022\\t***** ********* *** ******** ******* ********** ****** *** ***** * ******** *** *********.\\u003C**\\u003E\\u003C**\\u003E*************:\\u003C**\\u003E\u2022\\t***** * **** ** *****, ******** *********** ********.\\u003C**\\u003E\u2022\\t******* ***** ** *% ****** ***** **** (******** *******).\" } }, { \"@type\":\"Organization\", \"name\":\"****** ********\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"\u2022\\t******* ******* *** * ********* ********** ********** ** ***** *,***+ ****** ****** ********* ** *** ****** ****** ******* *** **** ***.\\u003C**\\u003E\u2022\\t*********** ****** *** *********** ** ********* ***** ** ****** ******** ****** ** **%, ********** ********* ** ***** ***** ************.\\u003C**\\u003E\u2022\\t************ ** ******** ******** & ********** ****, **** ** ********* ***** ** ********* *** ******* ********** ****** ******** *****. ********** ********** *** ******* ** ***** ********** ***********, ********* ** * *** ******** ***** ******** ** ** ******.\" } }, { \"@type\":\"Organization\", \"name\":\"****** ********\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"*********** *** *** ********, **************, *** ****************** ** * ******** ******* ******** ********. ******** ****** ********* ** ************ ******** (**) ******** ** ******** ****** ** *** ********\u2019* **** ********* ******** ******** ************. \\u003C**\\u003E******** **************** *******:\\u003C**\\u003E\u2022\\t***** ** *****, ************* ***+ ********* *** $*** ** *******\\u003C**\\u003E\u2022\\t******* *** *********** ******* **** ******** ********** **** ** ******* ** * **** ****.\\u003C**\\u003E\u2022\\t******* *** ******* ********** ******, ******** ********** ******, *** ******** ********** ******** *****\\u003C**\\u003E\u2022\\t******* ** ** ******** *********** ******** *** **** ** ******* ** ** ************** *** ****** ***********, ********* *******/******** ************ **********\\u003C**\\u003E\u2022\\t***/******** *** ******* ******* ********** \\u003C**\\u003E\\u003C**\\u003E*************:\\u003C**\\u003E\u2022\\t******** ******* ******* ****** ** *% *** ******** ******* ****** ** *%.\\u003C**\\u003E\u2022\\t******* ********** ******: ********* *** ******** ************** ************* ** ******* ******* *********, ******* ********* ******** ************.\" } }, { \"@type\":\"Organization\", \"name\":\"****** ********, ******** ******** *********\", \"location\":\"Denver, CO\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"*************:\\u003C**\\u003E\u2022\\t******** ******* ******* ** **% **** **** ****, **** *** ******** **** **% ** *** ****** ****, *** **% ****** ** *** ***** ****.\\u003C**\\u003E\u2022\\t************ ******* &**;$*** ** ******** ******** *** ********** &**;$*** ** ****** *******.\\u003C**\\u003E\u2022\\t************ ******** **** ***** ******** ************ *** *********** ********* *********.\" } }, { \"@type\":\"Organization\", \"name\":\"****** ******** ****\", \"member\":{ \"@type\":\"OrganizationRole\" } }, { \"@type\":\"Organization\", \"name\":\"******** *********, ******** ******* **\", \"member\":{ \"@type\":\"OrganizationRole\" } }, { \"@type\":\"Organization\", \"name\":\"******** *********\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"******* **** ** ******* ******** ************ *** ******** ******* ** ********* ******** *** ********'* ********* ************ *****\\u003C**\\u003E*************:\\u003C**\\u003E\u2022\\t****** *** ** *** *********** ** ******** *****, *****, ******** ************, ****** *******, *** ***** ******* ******** *** ** *********** ******* ** ******* *******. ******** ******* ****** ***** *******.\" } }, { \"@type\":\"Organization\", \"name\":\"******** *********\", \"member\":{ \"@type\":\"OrganizationRole\", \"description\":\"*********** **** *** **** *** ** ********* **** * ********** ***** ****** ** ******** *****, ******* ****** ******* *** ********* ***.\" } }, { \"@type\":\"Organization\", \"name\":\"****** ***********\", \"location\":\"Denver, CO\", \"member\":{ \"@type\":\"OrganizationRole\" } } ], \"knowsLanguage\":[ ], \"disambiguatingDescription\":\"\", \"interactionStatistic\":{ \"@type\":\"InteractionCounter\", \"interactionType\":\"https://schema.org/FollowAction\", \"name\":\"Follows\", \"userInteractionCount\":3530 }, \"description\":\"Highly motivated and driven to personally succeed through coaching and assisting\u2026\" }, { \"@type\":\"WebPage\", \"url\":\"https://www.linkedin.com/in/jonwsnow\", \"reviewedBy\":{ \"@type\":\"Person\", \"name\":\"Jon Snow\" } } ] } { \"page_name\":\"Paul Kirby: Member for Port Darwin\", \"page_category\":\"Politiker/in\", \"email\":\"electorate.portdarwin@nt.gov.au\", \"page_website\":[ \"http://www.territorylabor.com.au\", \"https://parliament.nt.gov.au/members/by-name/paul-kirby\" ], \"social_media_links\":[ \"https://www.instagram.com/kirbyportdarwin\", \"https://linkedin.com/in\" ], \"phone_number\":\"None\", \"location\":\"http://www.territorylabor.com.au/\", \"page_rate\":\"None\", \"page_review_number\":\"None\", \"page_likes\":\"None\", \"page_followers\":\"3.861 Follower\", \"following\":\"1,065 followed\" } Facebook List of Persons [ { \"id\": \"970ba0e4-105a-416d-a998-df846e0b9858\", \"firstName\": \"Anthony\", \"lastName\": \"Zurcher\", \"email\": \"haveyoursay@bbc.co.uk\", \"phone\": null, \"profession\": \"Media/news company\", \"personalWebPageURL\": \"http://www.bbc.co.uk/news\", \"followers\": 48, \"following\": 0, \"location\": \"BBC Broadcasting House, London, United Kingdom, W1A 1AA\" }, { \"id\": \"845d587c-8c5a-409b-9db1-ed1e9c51916b\", \"firstName\": \"Anthony\", \"lastName\": \"Zurcher\", \"email\": \"newsroomznbc@gmail.com\", \"phone\": null, \"profession\": \"Interest\", \"personalWebPageURL\": \"https://znbc.co.zm\", \"followers\": 982000, \"following\": 0, \"location\": \"ZNBC, P.O Box 50015, Mass Media Complex, Alick Nkata Road, Lusaka., 10101\" }, { \"id\": \"48e7a87d-171b-47bf-853e-94ca5443483d\", \"firstName\": \"Anthony\", \"lastName\": \"Zurcher\", \"email\": \"info@creators.com\", \"phone\": \"+1 310-337-7003\", \"profession\": \"Arts & entertainment\", \"personalWebPageURL\": \"http://www.Creators.com\", \"followers\": 2000, \"following\": 0, \"location\": \"+1 310-337-7003\" } ]","title":"Additional Links"},{"location":"HELP/#curl-example","text":"curl -X POST http://localhost:5001 -d \"{\\\"link\\\":\\\"https://www.facebook.com/mr.pallab.ghosh/\\\"}\" -H \"Content-Type: application/json\" ``` #### How to run python Create venv - virtual environment ```bash python3 -m venv fb_scapper_venv Activate created venv source fb_scapper_venv/bin/activate Install all fb_scrapper dependencies pip install -r requirements.txt And finally, run a script python3 -m fb_page_scrapper","title":"curl example"},{"location":"SDD/","text":"Software Design Document Introduction Purpose of the document This document service as a blueprint of Poirot capstone project. It provides a solution for collecting person's information based on open source resources. Scope of the project A project exposes REST APIs for getting input from the researcher, exposes REST API to get collected data, performs person of interest searches on LinkedIn and Facebook social networks without requiring to be logged in or having application tokens. Searches done anonymously. Intended audience Any researcher who fights with misinformation and the spreading of fake news. Project Overview and Goals A projects helps to the researches to gather information about person of interest. It helps to fight with spread of fake news or disinformation. A project uses: Java 17, gradle as a build tool, dockerd, Spring Boot framework, MongoDB as document database. Project length is about two month. Milestones Week 1 - Definition of problem Week 2 - requirement gathering Week 3 - requirement and resource analysis Week 4 - Software Design Document Week 5 - Implementation Week 6 - Testing, Final Polishing, finalization of documentation System Functionality Rest Controller - exposes REST APIs GET /linkedin/persons POST /linkedin/persons POST /facebook/persons GET /facebook/persons Services LinkedIn service - provides functionality for making LinkedIn searches and gathering relevant information. Facebook service - provide functionality for making Facebook searches and gathering relevant information. Repositories LinkedIn repository services as an interface for making common operations related to mongoDB Facebook repository services as an interface for making common operations related to mongoDB MongoDB - persists collected data, runs as a microservice, docker container. Facebook-Scrapper-Page - performs facebook scrapping pages. Runs as a docker container. Architectural Design provides a blueprint of the system\u2019s structure. Communication types: Client (a browser) communicates with a Service (Poirot) via HTTP synchronous protocol. A client sends request to the server and waits for the response. We may to use asynchronous protocol, for example AMQP however it is a more complicated and due to the time constraints we are not going to use it. Our application separated on two different microservices: a main one - Poirot and second one - mongo db server. Microservices helps to divide monolith application into separated and manageable services. As benefits, it gives us: scalability, maintainability and flexibility. Each service becomes more small and easier to deploy, independently. For example, if we fixed a bug in Poirot, we do not need to redeploy mongo server. It also reduces deployment time, make fault recovery more robust. Another benefit is a testing. Becasue to the nature of microservices the can in less effort test more efficiently. However, it is also adds overhead representing kind of disadvantages. For developer, it represents a difficulty to debug system. In case of many microservices it is challenging to get and synchronise logs from them. Data also can be out of consistency, management and integrity. To test single microservice is easy, however to test end two end becomes a challenge. Detailed Design Rest controllers PersonalInformationFetcher - exposes REST API to get input from the user. The payload is a json, PersonInfoRequest { \"firstName\":\"Jon\", \"lastName\":\"Snow\", \"email\":\"jon.snow@gameofthrones.com\", \"phone\":\"(666) JON-RAVEN\", \"location\":\"Westeros\" } Services LinkedInOps - firstly, performs a search query on DDG (duckduckgo), \"site:Linkedin.com 'Jon Snow'\". It takes only 5 top results. This parameter is in Constants, representing a limit. Can be changed. Once a result is gotten, it starts a LI personal information scraping. It uses available public LinkedIn profiles. If it is not available we get HTTP status - 999. It means that request is denied. The possible solution is to use \"https://translate.yandex.com/translate\", in current implementation it won't be implemented. When information is received LinkedInPerson.java it transformed to DMO (Data Model Object) and saved into database as a document. Database layer - repositories Spring Boot CRUD Repository abstracts database operations layer and makes its easier to make operations like: Update, Read, Create or Delete. To gather facebook user profiles we create a docker container with python fb page scrapper As a mongodb runs as separate docker container, our python facebook scrapper will run also as separate docker container. In order to run python scrapper we create Java process which will run 'docker exec 6ffda86269fa ulimit -a' and then grab the output which is as a json file and handle it and save into facebook collection. However, only public profiles can be scrapped. Each module or component should have its own subsection, explaining its purpose, functionalities, and internal workings. Include class diagrams, sequence diagrams, and other relevant technical drawings. References: Editorial Team. (n.d.). Software design document: What is it & how to create it! (template included). BIT.AI Blog. https://blog.bit.ai/software-design-document/ James Montemagno (April, 2022). Communication in a microservice architecture https://learn.microsoft.com/en-us/dotnet/architecture/microservices/architect-microservice-container-applications/communication-in-microservice-architecture Atlassian Blog - Advantages of microservices and disadvantages to know https://www.atlassian.com/microservices/cloud-computing/advantages-of-microservices","title":"Software Design"},{"location":"SDD/#software-design-document","text":"","title":"Software Design Document"},{"location":"SDD/#introduction","text":"","title":"Introduction"},{"location":"SDD/#purpose-of-the-document","text":"This document service as a blueprint of Poirot capstone project. It provides a solution for collecting person's information based on open source resources.","title":"Purpose of the document"},{"location":"SDD/#scope-of-the-project","text":"A project exposes REST APIs for getting input from the researcher, exposes REST API to get collected data, performs person of interest searches on LinkedIn and Facebook social networks without requiring to be logged in or having application tokens. Searches done anonymously.","title":"Scope of the project"},{"location":"SDD/#intended-audience","text":"Any researcher who fights with misinformation and the spreading of fake news.","title":"Intended audience"},{"location":"SDD/#project-overview-and-goals","text":"A projects helps to the researches to gather information about person of interest. It helps to fight with spread of fake news or disinformation. A project uses: Java 17, gradle as a build tool, dockerd, Spring Boot framework, MongoDB as document database. Project length is about two month.","title":"Project Overview and Goals"},{"location":"SDD/#milestones","text":"Week 1 - Definition of problem Week 2 - requirement gathering Week 3 - requirement and resource analysis Week 4 - Software Design Document Week 5 - Implementation Week 6 - Testing, Final Polishing, finalization of documentation","title":"Milestones"},{"location":"SDD/#system-functionality","text":"Rest Controller - exposes REST APIs GET /linkedin/persons POST /linkedin/persons POST /facebook/persons GET /facebook/persons Services LinkedIn service - provides functionality for making LinkedIn searches and gathering relevant information. Facebook service - provide functionality for making Facebook searches and gathering relevant information. Repositories LinkedIn repository services as an interface for making common operations related to mongoDB Facebook repository services as an interface for making common operations related to mongoDB MongoDB - persists collected data, runs as a microservice, docker container. Facebook-Scrapper-Page - performs facebook scrapping pages. Runs as a docker container.","title":"System Functionality"},{"location":"SDD/#architectural-design","text":"provides a blueprint of the system\u2019s structure. Communication types: Client (a browser) communicates with a Service (Poirot) via HTTP synchronous protocol. A client sends request to the server and waits for the response. We may to use asynchronous protocol, for example AMQP however it is a more complicated and due to the time constraints we are not going to use it. Our application separated on two different microservices: a main one - Poirot and second one - mongo db server. Microservices helps to divide monolith application into separated and manageable services. As benefits, it gives us: scalability, maintainability and flexibility. Each service becomes more small and easier to deploy, independently. For example, if we fixed a bug in Poirot, we do not need to redeploy mongo server. It also reduces deployment time, make fault recovery more robust. Another benefit is a testing. Becasue to the nature of microservices the can in less effort test more efficiently. However, it is also adds overhead representing kind of disadvantages. For developer, it represents a difficulty to debug system. In case of many microservices it is challenging to get and synchronise logs from them. Data also can be out of consistency, management and integrity. To test single microservice is easy, however to test end two end becomes a challenge.","title":"Architectural Design"},{"location":"SDD/#detailed-design","text":"Rest controllers PersonalInformationFetcher - exposes REST API to get input from the user. The payload is a json, PersonInfoRequest { \"firstName\":\"Jon\", \"lastName\":\"Snow\", \"email\":\"jon.snow@gameofthrones.com\", \"phone\":\"(666) JON-RAVEN\", \"location\":\"Westeros\" } Services LinkedInOps - firstly, performs a search query on DDG (duckduckgo), \"site:Linkedin.com 'Jon Snow'\". It takes only 5 top results. This parameter is in Constants, representing a limit. Can be changed. Once a result is gotten, it starts a LI personal information scraping. It uses available public LinkedIn profiles. If it is not available we get HTTP status - 999. It means that request is denied. The possible solution is to use \"https://translate.yandex.com/translate\", in current implementation it won't be implemented. When information is received LinkedInPerson.java it transformed to DMO (Data Model Object) and saved into database as a document. Database layer - repositories Spring Boot CRUD Repository abstracts database operations layer and makes its easier to make operations like: Update, Read, Create or Delete. To gather facebook user profiles we create a docker container with python fb page scrapper As a mongodb runs as separate docker container, our python facebook scrapper will run also as separate docker container. In order to run python scrapper we create Java process which will run 'docker exec 6ffda86269fa ulimit -a' and then grab the output which is as a json file and handle it and save into facebook collection. However, only public profiles can be scrapped. Each module or component should have its own subsection, explaining its purpose, functionalities, and internal workings. Include class diagrams, sequence diagrams, and other relevant technical drawings.","title":"Detailed Design"},{"location":"SDD/#_1","text":"References: Editorial Team. (n.d.). Software design document: What is it & how to create it! (template included). BIT.AI Blog. https://blog.bit.ai/software-design-document/ James Montemagno (April, 2022). Communication in a microservice architecture https://learn.microsoft.com/en-us/dotnet/architecture/microservices/architect-microservice-container-applications/communication-in-microservice-architecture Atlassian Blog - Advantages of microservices and disadvantages to know https://www.atlassian.com/microservices/cloud-computing/advantages-of-microservices","title":""},{"location":"SDSM/","text":"Software Deployment and Software Maintenance The CI/CD process looks like: Application has a configuration file application.properties . At bootstrap step application reads all required parameters from this file. build.gradle contains tasks responsible for build, code coverage, testing and code formating. It also contains dependencies of the application. Version control We use github as a repository and tooling and git as a version control. It is defacto version control. The link to the repo . We work with branches. The main one called main branch. The idea to use branches to make separation of the team work and reduce risk of untested work. When all required testing is done, we merge it to the main . Tags & Releases The entire process presented here In Poirot project new release is done when milestone is achieved. When new release is set up, we created new docker image and redeploy the application. Documentation Oragui (2024) writes: \"Software documentation is a crucial part of working software. Software documentation is crucial because it can assist users understand how to use your software, it can provide developers and other technical stakeholders with information about the technical aspects of your software, and it can help ensure that the software development process is consistent and repeatable.\". Documentation is in md files. We use mkdocs which generates project's documentation. Prerequisites python3 -m venv doc_venv && source doc_venv/bin/activate && pip install mkdocs Configuration file mkdocs.yml Building ./scripts/mkdocs_build.sh The documentation is hosted on github.com mkdocs gh-deploy In Poirot project we also use javadoc a documentation of the source code. To generate it, simply run gradle javadoc Deployment Strategies and Maintenance Techniques Why Docker? It helps us to run our application in isolated environment. It makes management more easy, if we will use k8s we could easlily to scale up, to scale down. k8s also checks health check of the microservice, and if it fails it will restart it again. Before docker we can simply run the following command: gradle clean build And then java -jar build/libs/poirot-0.0.1-SNAPSHOT.jar It is good, but only works locally. To build docker docker build --tag=poirot:latest . To run a docker docker run -p 9090:9090 poirot:latest Effectiveness of Strategies Used References Yiadh TLIJANI (April, 2024) 8 Deployment Strategies Explained and Compared https://devopsbootcamp.org/8-deployment-strategies-explained-and-compared/ Slavi\u0161a Avramovi\u0107 (January 8, 2024) Dockerizing a Spring Boot Application https://www.baeldung.com/dockerizing-spring-boot-application Github Managing releases in a repository https://docs.github.com/en/repositories/releasing-projects-on-github/managing-releases-in-a-repository Documentation - Creating Project Documentation https://www.mkdocs.org/ Poirot documentation site https://hob1t.github.io/poirot/ David, O. (2023, April 26). Software documentation best practices with examples . Helpjuice. Martin, M. (2023, April 8). Software configuration management in software engineering. Guru99. Software deployment- definitions and overview. (n. d). Sumo Logic. What is a software maintenance process? 4 types of software maintenance. (n.d.). Thales.","title":"Software CI/CD"},{"location":"SDSM/#software-deployment-and-software-maintenance","text":"The CI/CD process looks like: Application has a configuration file application.properties . At bootstrap step application reads all required parameters from this file. build.gradle contains tasks responsible for build, code coverage, testing and code formating. It also contains dependencies of the application.","title":"Software Deployment and Software Maintenance"},{"location":"SDSM/#version-control","text":"We use github as a repository and tooling and git as a version control. It is defacto version control. The link to the repo . We work with branches. The main one called main branch. The idea to use branches to make separation of the team work and reduce risk of untested work. When all required testing is done, we merge it to the main .","title":"Version control"},{"location":"SDSM/#tags-releases","text":"The entire process presented here In Poirot project new release is done when milestone is achieved. When new release is set up, we created new docker image and redeploy the application.","title":"Tags &amp; Releases"},{"location":"SDSM/#documentation","text":"Oragui (2024) writes: \"Software documentation is a crucial part of working software. Software documentation is crucial because it can assist users understand how to use your software, it can provide developers and other technical stakeholders with information about the technical aspects of your software, and it can help ensure that the software development process is consistent and repeatable.\". Documentation is in md files. We use mkdocs which generates project's documentation. Prerequisites python3 -m venv doc_venv && source doc_venv/bin/activate && pip install mkdocs Configuration file mkdocs.yml Building ./scripts/mkdocs_build.sh The documentation is hosted on github.com mkdocs gh-deploy In Poirot project we also use javadoc a documentation of the source code.","title":"Documentation"},{"location":"SDSM/#to-generate-it-simply-run","text":"gradle javadoc","title":"To generate it, simply run"},{"location":"SDSM/#deployment-strategies-and-maintenance-techniques","text":"Why Docker? It helps us to run our application in isolated environment. It makes management more easy, if we will use k8s we could easlily to scale up, to scale down. k8s also checks health check of the microservice, and if it fails it will restart it again. Before docker we can simply run the following command: gradle clean build And then java -jar build/libs/poirot-0.0.1-SNAPSHOT.jar It is good, but only works locally.","title":"Deployment Strategies and Maintenance Techniques"},{"location":"SDSM/#to-build-docker","text":"docker build --tag=poirot:latest .","title":"To build docker"},{"location":"SDSM/#to-run-a-docker","text":"docker run -p 9090:9090 poirot:latest","title":"To run a docker"},{"location":"SDSM/#effectiveness-of-strategies-used","text":"","title":"Effectiveness of Strategies Used"},{"location":"SDSM/#references","text":"Yiadh TLIJANI (April, 2024) 8 Deployment Strategies Explained and Compared https://devopsbootcamp.org/8-deployment-strategies-explained-and-compared/ Slavi\u0161a Avramovi\u0107 (January 8, 2024) Dockerizing a Spring Boot Application https://www.baeldung.com/dockerizing-spring-boot-application Github Managing releases in a repository https://docs.github.com/en/repositories/releasing-projects-on-github/managing-releases-in-a-repository Documentation - Creating Project Documentation https://www.mkdocs.org/ Poirot documentation site https://hob1t.github.io/poirot/ David, O. (2023, April 26). Software documentation best practices with examples . Helpjuice. Martin, M. (2023, April 8). Software configuration management in software engineering. Guru99. Software deployment- definitions and overview. (n. d). Sumo Logic. What is a software maintenance process? 4 types of software maintenance. (n.d.). Thales.","title":"References"},{"location":"TSD/","text":"Testing and Security Document Testing Unit testing This project is developed using TDD (test driven development) methodology. It means, you start developing with test, then go to the code. At the end, your code is covered by unit tests. End-2-End testing Next, is e2e testing. The idea is to run entire system from the start to the end, where a request will pass every flow. It resembles real system in the production environment. Load testing It puts a system into the stress. It helps to find the limits of the system. REST API to be under the test Code Coverage The quality is not only functionality that works. It is also relates to the code coverage. What percentage of our code covered by tests. I use Jacoco as code coverage checker. Code Style Sloppy or smelly code contains hidden bugs which is really difficult to find. Gradle introduces task called spotless which removes unused imports, reformats code and even more. Security \"Basic security goals such as confidentiality, integrity, and availability.\" (Alenezi, 2019). He also adds: \"Hacking, Denial of services, virus, fire, and power loss are sources of systematic risk. Whereas, unsystematic risk is the portion of total risk that is unique to the enterprise. Data loss or misuse, human error, application error, and inside attack can be examples for unsystematic risk.\" In poirot I did ZAP testing. Endpoint was: http://localhost:9090/swagger-ui/index.html . Here are the results: In addition, added gradle OWASP dependency-check tasks. Results as following: > Task :dependencyCheckAnalyze Verifying dependencies for project poirot Checking for updates and analyzing dependencies for vulnerabilities An NVD API Key was not provided - it is highly recommended to use an NVD API key as the update can take a VERY long time without an API Key Generating report for project poirot Found 0 vulnerabilities in project poirot Risk Management Possible Risks: Database is not reponsding to responding very slow DuckDuckGo prevents to make searches FB page scrapper returns \"Session is not valid\" Our application should implement Zero Trust paradigm, which basically means each request represents potential danger. References: Mario Casari (July, 2024) How to Perform Load Testing in Spring Boot with Gatling https://www.freecodecamp.org/news/how-to-integrate-spring-boot-with-gatling/ Alenezi, M., & Almuairfi, S. (2019). Security risks in the software development lifecycle. International Journal of Recent Technology and Engineering (IJRTE), 8(3), 22773878. https://www.ijrte.org/wp-content/uploads/papers/v8i3/C5374098319.pdf","title":"Testing & Security Plan"},{"location":"TSD/#testing-and-security-document","text":"","title":"Testing and Security Document"},{"location":"TSD/#testing","text":"","title":"Testing"},{"location":"TSD/#unit-testing","text":"This project is developed using TDD (test driven development) methodology. It means, you start developing with test, then go to the code. At the end, your code is covered by unit tests.","title":"Unit testing"},{"location":"TSD/#end-2-end-testing","text":"Next, is e2e testing. The idea is to run entire system from the start to the end, where a request will pass every flow. It resembles real system in the production environment.","title":"End-2-End testing"},{"location":"TSD/#load-testing","text":"It puts a system into the stress. It helps to find the limits of the system.","title":"Load testing"},{"location":"TSD/#rest-api-to-be-under-the-test","text":"","title":"REST API to be under the test"},{"location":"TSD/#code-coverage","text":"The quality is not only functionality that works. It is also relates to the code coverage. What percentage of our code covered by tests. I use Jacoco as code coverage checker.","title":"Code Coverage"},{"location":"TSD/#code-style","text":"Sloppy or smelly code contains hidden bugs which is really difficult to find. Gradle introduces task called spotless which removes unused imports, reformats code and even more.","title":"Code Style"},{"location":"TSD/#security","text":"\"Basic security goals such as confidentiality, integrity, and availability.\" (Alenezi, 2019). He also adds: \"Hacking, Denial of services, virus, fire, and power loss are sources of systematic risk. Whereas, unsystematic risk is the portion of total risk that is unique to the enterprise. Data loss or misuse, human error, application error, and inside attack can be examples for unsystematic risk.\" In poirot I did ZAP testing. Endpoint was: http://localhost:9090/swagger-ui/index.html . Here are the results: In addition, added gradle OWASP dependency-check tasks. Results as following: > Task :dependencyCheckAnalyze Verifying dependencies for project poirot Checking for updates and analyzing dependencies for vulnerabilities An NVD API Key was not provided - it is highly recommended to use an NVD API key as the update can take a VERY long time without an API Key Generating report for project poirot Found 0 vulnerabilities in project poirot","title":"Security"},{"location":"TSD/#risk-management","text":"Possible Risks: Database is not reponsding to responding very slow DuckDuckGo prevents to make searches FB page scrapper returns \"Session is not valid\" Our application should implement Zero Trust paradigm, which basically means each request represents potential danger.","title":"Risk Management"},{"location":"TSD/#references","text":"Mario Casari (July, 2024) How to Perform Load Testing in Spring Boot with Gatling https://www.freecodecamp.org/news/how-to-integrate-spring-boot-with-gatling/ Alenezi, M., & Almuairfi, S. (2019). Security risks in the software development lifecycle. International Journal of Recent Technology and Engineering (IJRTE), 8(3), 22773878. https://www.ijrte.org/wp-content/uploads/papers/v8i3/C5374098319.pdf","title":"References:"},{"location":"architechture/","text":"Project Name Poirot, like famous detective Hercule Poirot High Level design VPN Gathering person's information not always legally allowed or person's accreditated task. It is quite important to hide searcher's information. VPN helps to give a solution for this requirement. Gewirtz (2024) explains: \"The purpose of a VPN is to provide you with security and privacy as you communicate over the internet. Most of the internet's core protocols (communication methods) were designed to route around failure, rather than secure data. While some standards have developed, not all internet apps are secure. Many still send their information without any security or privacy protection whatsoever. This leaves any internet user vulnerable to criminals who might steal your banking or credit card information, governments who might want to eavesdrop on their citizens, and other internet users who might want to spy on you for a whole range of nefarious reasons.\" If a researcher logged in into LI account and looks for user's profile, LI notifies a person what a \"searcher\" was looking his profile. Using VPN we will hide part of such information. In addition, using Google Dorks we gather information without showing up our identity to the person of interest. Software requirements Use cases: As a user I would like to be able to gather person's information on LinkedIn As a user I would like to be able to gather person's information on Facebook As a user I would like to persist gathered information into database As a user I would like to use CRUD repository As a user I would like to get REST API for CRUD operations Introduction As part of fight with misinformation, disinformation and fake news detection is one of the required steps are to get knowledge about person of interest. Existing OSINT tools can bring problems related to security or lack of maintenance. The purpose of this project to create a suitable solution. Product scope is having MVC layer, Business layer & Persistence layer. However, it will not have a data analytics and data visualization layers. Functional Requirements External Interface Requirements User Interface is a Swagger pages which make call to the backend functionality. Non-functional Requirements Security Capacity - ideally storage should be dynamically allocated, aws s3 is a good candidate. For the capstone purposes it is enough to have 250Gb. Compatibility - minimum requirements for hardware are: RAM 8GB, CPU Apple M1, 8 Cores. Reliability and availability - response for each request should be persisted. DB should have a backup last 24 hours. Each microservice should implement its healthcheck, for cluster management. Scalability - the minimum number of pods is one, maximum is 3. k8s configured for scale up or scale down. Maintainability - CI/CD triggered on each commit. In addition, on master merge triggers a redeploy logic. In addition, part of CI process added logic of checking dependencies updates and security code scanning. Usability - a service exposes Swagger, accepts curl commands as well. Project Resources Resources Identified A computer a main source of machinery. Text editor or IDE to write code, edit documentation. Browser - a firefox or chrome. To surf internet. Internet connection - to do a research VPN - for secure connection outside the world. Any VPN is suitable, in my case i use Surfshark. A person with required skill set (me) Time - entire project takes 6 weeks, each week is intended to Specific Sprint. A lenght of each Spring is exactly one week long. Challenges gathering facebook information Facebook requires to be registered in order to get user's information. Registration allow to sources to know who is gathering information. Our goal to expose as little as possible information for anybody. So, first we do a google dorks as site:facebook.com \"John Doe\" . It brings us a search page which we have to scrap. One of the scapping results is user's profile URL which contains information related to username. Username can be as same as a user's first and last names or different. In addition, we can also find userID info, which can be useful. Next challenge is to parse search results and get valuable information. Fortunately, there are a lot of available libraries which helps us to do it. During the number of ddg request I got: \"Please complete the following challenge to confirm this search was made by a human\" Basically it means I cannot automate web scrapping using current approach. Management of Resources Time The longevity of the project is about 6 weeks. Each week 15 hours of work. Raw materials /software to be used IDE - Intellij, java 17, python 3, docker, macOS, firefox as a browser, VPN - surfshark Docker, MongoDB, Spring Boot framework, gradle, docker-compose Java is good language, I am familiar with it, 17 version is a minimum version that requires Spring Boot. Docker is a technology which makes possible to run application as a service. Using k8s makes to manage our cluster of microservices if we need to scale. In general using docker images gives us ability in matter of seconds to redeploy our application for more newest version. Gradle is a build tool. To build a project we have two options: maven or gradle. Gradle is more modern building tool. MongoDB is chosen because it is document database, allows us to save data simply as json file. To use relational database is not suitable for this kind of project due to the data model. In addition to scale not relational database is much easier that relational. Human resources Me and Professor as mentor and adviser. I am going to implement this project. Machinery and equipment MacBook AIR it is what I have. Financial Resources A cost of the project is the much as 300 usd. Infomration and data Using duckduck search engine, Google Scholar and google dorks. Using google requires to be loged in, which not serves well for our porposes, duckduck is allows to make search queries anonymously. Also any information used or looked at mentioned in References. Gathered information saved in MongoDB. Software Requirements and Specification Software Requirements Should expose REST API in order to get input from the user like first name, last name, email, location Optional: email, location Should save gathered information about a person of interest. Should expose REST API for CRUD operations Should be implemented as microservice(s) and packeged as a Dockerfile. Code should be kept in github repository Software Design Document ** Gathering Flow ** Interface of REST CRUD operations C reate operation puts a new document/entry into database/collection. R ead operation gets a document/entry from database/collection U pdate operation changes property(-s) of the document/entry D elete operation deletes a document/entry from the database/collection Controllers Person's information Gathering Controller CRUD Controller Repositories In the world of Spring Boot a repository is an interface which abstracts database operations. FaceBook Repository List of allowed operations Saves a given entity Gets the entity by ID Gets all entities by paging Deletes the given entity LinkedIn Repository Data Access Objects Person Location Alumni Image URL - for reverse search First Name Last Name Phone Email Follows - a counter Connection # Works for LinkedIn URL If we get status=999 !archivemd ${https://www.linkedin.com/in/ashley-hume-5733b345} https://archive.md/https://www.linkedin.com/in/ashley-hume-5733b345 https://archive.md/https://www.facebook.com/jonsnowandassociates/about or https://translate.yandex.com/translate References David Gewirtz (May 28, 2024). What is a VPN and why do you need one? https://www.zdnet.com/article/what-is-a-vpn-and-why-do-you-need-one-all-your-virtual-private-network-questions-answered/ Ishan Oshada GDorks github repository https://github.com/Ishanoshada/GDorks Spring Boot - data repository https://docs.spring.io/spring-data/data-commons/docs/1.6.1.RELEASE/reference/html/repositories.html","title":"Problem Statement"},{"location":"architechture/#project-name","text":"Poirot, like famous detective Hercule Poirot","title":"Project Name"},{"location":"architechture/#high-level-design","text":"","title":"High Level design"},{"location":"architechture/#vpn","text":"Gathering person's information not always legally allowed or person's accreditated task. It is quite important to hide searcher's information. VPN helps to give a solution for this requirement. Gewirtz (2024) explains: \"The purpose of a VPN is to provide you with security and privacy as you communicate over the internet. Most of the internet's core protocols (communication methods) were designed to route around failure, rather than secure data. While some standards have developed, not all internet apps are secure. Many still send their information without any security or privacy protection whatsoever. This leaves any internet user vulnerable to criminals who might steal your banking or credit card information, governments who might want to eavesdrop on their citizens, and other internet users who might want to spy on you for a whole range of nefarious reasons.\" If a researcher logged in into LI account and looks for user's profile, LI notifies a person what a \"searcher\" was looking his profile. Using VPN we will hide part of such information. In addition, using Google Dorks we gather information without showing up our identity to the person of interest.","title":"VPN"},{"location":"architechture/#software-requirements","text":"","title":"Software requirements"},{"location":"architechture/#use-cases","text":"As a user I would like to be able to gather person's information on LinkedIn As a user I would like to be able to gather person's information on Facebook As a user I would like to persist gathered information into database As a user I would like to use CRUD repository As a user I would like to get REST API for CRUD operations","title":"Use cases:"},{"location":"architechture/#introduction","text":"As part of fight with misinformation, disinformation and fake news detection is one of the required steps are to get knowledge about person of interest. Existing OSINT tools can bring problems related to security or lack of maintenance. The purpose of this project to create a suitable solution. Product scope is having MVC layer, Business layer & Persistence layer. However, it will not have a data analytics and data visualization layers. Functional Requirements","title":"Introduction"},{"location":"architechture/#external-interface-requirements","text":"User Interface is a Swagger pages which make call to the backend functionality.","title":"External Interface Requirements"},{"location":"architechture/#non-functional-requirements","text":"Security Capacity - ideally storage should be dynamically allocated, aws s3 is a good candidate. For the capstone purposes it is enough to have 250Gb. Compatibility - minimum requirements for hardware are: RAM 8GB, CPU Apple M1, 8 Cores. Reliability and availability - response for each request should be persisted. DB should have a backup last 24 hours. Each microservice should implement its healthcheck, for cluster management. Scalability - the minimum number of pods is one, maximum is 3. k8s configured for scale up or scale down. Maintainability - CI/CD triggered on each commit. In addition, on master merge triggers a redeploy logic. In addition, part of CI process added logic of checking dependencies updates and security code scanning. Usability - a service exposes Swagger, accepts curl commands as well.","title":"Non-functional Requirements"},{"location":"architechture/#project-resources-resources-identified","text":"A computer a main source of machinery. Text editor or IDE to write code, edit documentation. Browser - a firefox or chrome. To surf internet. Internet connection - to do a research VPN - for secure connection outside the world. Any VPN is suitable, in my case i use Surfshark. A person with required skill set (me) Time - entire project takes 6 weeks, each week is intended to Specific Sprint. A lenght of each Spring is exactly one week long.","title":"Project Resources Resources Identified"},{"location":"architechture/#challenges-gathering-facebook-information","text":"Facebook requires to be registered in order to get user's information. Registration allow to sources to know who is gathering information. Our goal to expose as little as possible information for anybody. So, first we do a google dorks as site:facebook.com \"John Doe\" . It brings us a search page which we have to scrap. One of the scapping results is user's profile URL which contains information related to username. Username can be as same as a user's first and last names or different. In addition, we can also find userID info, which can be useful. Next challenge is to parse search results and get valuable information. Fortunately, there are a lot of available libraries which helps us to do it. During the number of ddg request I got: \"Please complete the following challenge to confirm this search was made by a human\" Basically it means I cannot automate web scrapping using current approach.","title":"Challenges gathering facebook information"},{"location":"architechture/#management-of-resources","text":"","title":"Management of Resources"},{"location":"architechture/#time","text":"The longevity of the project is about 6 weeks. Each week 15 hours of work.","title":"Time"},{"location":"architechture/#raw-materials-software-to-be-used","text":"IDE - Intellij, java 17, python 3, docker, macOS, firefox as a browser, VPN - surfshark Docker, MongoDB, Spring Boot framework, gradle, docker-compose Java is good language, I am familiar with it, 17 version is a minimum version that requires Spring Boot. Docker is a technology which makes possible to run application as a service. Using k8s makes to manage our cluster of microservices if we need to scale. In general using docker images gives us ability in matter of seconds to redeploy our application for more newest version. Gradle is a build tool. To build a project we have two options: maven or gradle. Gradle is more modern building tool. MongoDB is chosen because it is document database, allows us to save data simply as json file. To use relational database is not suitable for this kind of project due to the data model. In addition to scale not relational database is much easier that relational.","title":"Raw materials /software to be used"},{"location":"architechture/#human-resources","text":"Me and Professor as mentor and adviser. I am going to implement this project.","title":"Human resources"},{"location":"architechture/#machinery-and-equipment","text":"MacBook AIR it is what I have.","title":"Machinery and equipment"},{"location":"architechture/#financial-resources","text":"A cost of the project is the much as 300 usd.","title":"Financial Resources"},{"location":"architechture/#infomration-and-data","text":"Using duckduck search engine, Google Scholar and google dorks. Using google requires to be loged in, which not serves well for our porposes, duckduck is allows to make search queries anonymously. Also any information used or looked at mentioned in References. Gathered information saved in MongoDB.","title":"Infomration and data"},{"location":"architechture/#software-requirements-and-specification","text":"","title":"Software Requirements and Specification"},{"location":"architechture/#software-requirements_1","text":"Should expose REST API in order to get input from the user like first name, last name, email, location Optional: email, location Should save gathered information about a person of interest. Should expose REST API for CRUD operations Should be implemented as microservice(s) and packeged as a Dockerfile. Code should be kept in github repository","title":"Software Requirements"},{"location":"architechture/#software-design-document","text":"** Gathering Flow ** Interface of REST CRUD operations C reate operation puts a new document/entry into database/collection. R ead operation gets a document/entry from database/collection U pdate operation changes property(-s) of the document/entry D elete operation deletes a document/entry from the database/collection Controllers Person's information Gathering Controller CRUD Controller Repositories In the world of Spring Boot a repository is an interface which abstracts database operations. FaceBook Repository List of allowed operations Saves a given entity Gets the entity by ID Gets all entities by paging Deletes the given entity LinkedIn Repository Data Access Objects Person Location Alumni Image URL - for reverse search First Name Last Name Phone Email Follows - a counter Connection # Works for LinkedIn URL","title":"Software Design Document"},{"location":"architechture/#if-we-get-status999","text":"!archivemd ${https://www.linkedin.com/in/ashley-hume-5733b345} https://archive.md/https://www.linkedin.com/in/ashley-hume-5733b345 https://archive.md/https://www.facebook.com/jonsnowandassociates/about or https://translate.yandex.com/translate","title":"If we get status=999"},{"location":"architechture/#references","text":"David Gewirtz (May 28, 2024). What is a VPN and why do you need one? https://www.zdnet.com/article/what-is-a-vpn-and-why-do-you-need-one-all-your-virtual-private-network-questions-answered/ Ishan Oshada GDorks github repository https://github.com/Ishanoshada/GDorks Spring Boot - data repository https://docs.spring.io/spring-data/data-commons/docs/1.6.1.RELEASE/reference/html/repositories.html","title":"References"}]}